<!DOCTYPE html>
<!-- saved from url=(0072)https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US" xml:lang="en-US" itemscope="" itemtype="http://schema.org/WebSite"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">  <meta name="description" content="For traceability and debugging purposes, it can be very convenient to log execution details of every method. This article explains how this can be done with AspectJ and Java annotations."> <meta name="keywords" content="aop annotations, aop java logging, aop logging annotations, aop logging java, aspect oriented programming java, aspectj logging, aspectj weaving annotations"> <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1"> <meta name="google-site-verification" content="JEj_gQr2CPe2QKGw8XdMz0R7VboQIUbX3FlM-lwTq-8"> <meta name="author" content="Yegor Bugayenko"> <meta name="article:published_time" content="2014-06-01 00:00:00 +0000"> <meta name="og:site_name" content="Yegor Bugayenko"> <meta name="og:type" content="article"> <meta name="og:locale" content="en_US"> <meta name="twitter:account_id" content="4503599630178231"> <meta name="twitter:creator" content="@yegor256"> <meta name="twitter:site" content="@yegor256"> <meta name="twitter:title" property="og:title" content="Java Method Logging with AOP and Annotations"> <meta name="twitter:description" property="og:description" content="For traceability and debugging purposes, it can be very convenient to log execution details of every method. This article explains how this can be done with AspectJ and Java annotations."> <meta name="twitter:url" property="og:url" content="https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html"> <meta name="telegram:channel" content="AAAAAEJFMRzsRTRxM3ec6A"> <link rel="search" type="application/opensearchdescription+xml" href="https://www.yegor256.com/opensearch.xml" title="yegor256"> <link rel="shortcut icon" href="https://www.yegor256.com/favicon.ico?9495b26442d"> <link rel="apple-touch-icon" href="https://www.yegor256.com/favicon.ico?9495b26442d"> <link rel="alternate" type="application/rss+xml" title="RSS for yegor256.com" href="https://www.yegor256.com/rss.xml"> <link rel="stylesheet" href="./Java Method Logging with AOP and Annotations_files/layout.css"> <link rel="stylesheet" href="./Java Method Logging with AOP and Annotations_files/icons.css"> <link rel="canonical" href="https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html"> <title>Java Method Logging with AOP and Annotations </title> <script async="" src="./Java Method Logging with AOP and Annotations_files/analytics.js"></script><script src="./Java Method Logging with AOP and Annotations_files/embed.js" data-timestamp="1578149868575"></script><script src="./Java Method Logging with AOP and Annotations_files/count-data.js"></script><link rel="prefetch" as="style" href="https://c.disquscdn.com/next/embed/styles/lounge.91c71242b4acaa0ee7f9db125ef21f90.css"><link rel="prefetch" as="script" href="https://c.disquscdn.com/next/embed/common.bundle.0b9bbdb3bc568241a5d1d7626947e8b0.js"><link rel="prefetch" as="script" href="https://c.disquscdn.com/next/embed/lounge.bundle.0523614fef9787c3e3459e0602078385.js"><link rel="prefetch" as="script" href="https://disqus.com/next/config.js"></head> <body style="zoom: 1;"><div class="wrapper"> <aside class="header-toggle unprintable" id="header-toggle" title="Show the menu" onclick="$(&#39;#header&#39;).show();$(&#39;#header-toggle&#39;).hide();">☰</aside> <header class="header" id="header"><div class="face"> <a href="https://www.yegor256.com/about-me.html#form" class="sub" title="Click to subscribe to my monthly newsletter"><span>Subscribe</span></a> <a href="https://www.yegor256.com/about-me.html" style="position:relative;"> <img src="./Java Method Logging with AOP and Annotations_files/face-256x256.jpg" class="photo" alt="Yegor Bugayenko"> </a></div><nav><ul class="menu social notranslate"> <li><a href="https://twitter.com/intent/follow?screen_name=yegor256" rel="nofollow" title="Follow me on Twitter"><i class="icon icon-twitter notranslate" aria-hidden="true"></i></a></li> <li><a href="https://www.yegor256.com/rss.xml" rel="nofollow" title="Subscribe to my RSS feed"><i class="icon icon-rss notranslate" aria-hidden="true"></i></a></li> <li><a itemprop="sameAs" href="https://github.com/yegor256" rel="nofollow" title="My GitHub profile"><i class="icon icon-github notranslate" aria-hidden="true"></i></a></li> <li><a itemprop="sameAs" href="http://stackoverflow.com/users/187141/yegor256" rel="nofollow" title="My StackOverflow profile"><i class="icon icon-stackoverflow notranslate" aria-hidden="true"></i></a></li> <li><a itemprop="sameAs" href="https://www.facebook.com/yegor256" rel="nofollow" title="Follow me on Facebook"><i class="icon icon-facebook notranslate" aria-hidden="true"></i></a></li> <li><a itemprop="sameAs" href="https://instagram.com/yegor256" rel="nofollow" title="Follow me on Instagram"><i class="icon icon-instagram notranslate" aria-hidden="true"></i></a></li> <li><a itemprop="sameAs" href="https://www.linkedin.com/in/yegor256" rel="nofollow" title="My LinkedIn profile"><i class="icon icon-linkedin notranslate" aria-hidden="true"></i></a></li> <li><a itemprop="sameAs" href="https://www.youtube.com/c/yegor256?sub_confirmation=1" rel="nofollow" title="My Youtube video channel"><i class="icon icon-youtube notranslate" aria-hidden="true"></i></a></li> <li><a itemprop="sameAs" href="https://www.pinterest.com/yegor256/" rel="nofollow" title="My Pinterest boards"><i class="icon icon-pinterest notranslate" aria-hidden="true"></i></a></li> <li><a itemprop="sameAs" href="https://angel.co/yegor256" rel="nofollow" title="My AngelList profile"><i class="icon icon-angellist notranslate" aria-hidden="true"></i></a></li> <li><a href="https://soundcloud.com/yegor256" rel="nofollow" title="My podcast"><i class="icon icon-podcast notranslate" aria-hidden="true"></i></a></li> <li><a href="https://itunes.apple.com/us/podcast/yegor256-podcast/id1150826721" rel="nofollow" title="My iTunes podcast"><i class="icon icon-itunes notranslate" aria-hidden="true"></i></a></li> <li><a href="https://t.me/yegor256news" rel="nofollow" title="My Telegram public channel"><i class="icon icon-telegram notranslate" aria-hidden="true"></i></a></li> <li><a href="mailto:blog@yegor256.com" rel="nofollow" title="Email me any time"><i class="icon icon-mail notranslate" aria-hidden="true"></i></a></li></ul><ul class="menu"> <li><a href="https://www.yegor256.com/" title="Home page">Home</a></li> <li><a href="https://www.yegor256.com/best.html" title="Best articles to read">12&nbsp;Best</a></li> <li><a href="https://www.yegor256.com/contents.html" title="The contents of the entire blog">All&nbsp;333</a></li> <li><a href="https://www.yegor256.com/webinars.html" title="My webinars">Webinars</a></li> <li><a href="https://www.yegor256.com/talks.html" title="Future and past conference talks">Talks</a></li> <li><a href="https://www.yegor256.com/books.html" title="The books I wrote">Books</a></li> <li><a href="https://www.yegor256.com/papers.html" title="My academic papers and patents">Papers</a></li> <li><a href="https://www.yegor256.com/pets.html" title="My loved pet projects">Pets</a></li> <li class="highlighted"><a href="https://www.yegor256.com/trainings.html" title="On-site trainings">Trainings</a></li> <li><a href="https://www.yegor256.com/award.html" title="Software quality award">Award</a></li> <li><a href="https://www.yegor256.com/testimonials.html" title="What some people say about me">Testimonials</a></li> <li><a href="https://www.yegor256.com/shift-m.html" title="Audio podcast about project management">Shift-M</a></li> <li><a href="https://www.yegor256.com/paintings.html" title="My paintings for sale">Art</a></li> <li><a href="https://ru.yegor256.com/" title="Немного на русском языке о политике в России, Украине и мире">Политика</a></li></ul></nav><div class="search"> <form method="get" action="https://www.google.com/search" itemprop="potentialAction" itemscope="" itemtype="http://schema.org/SearchAction"> <meta itemprop="target" content="https://www.google.com/search?q={q}"> <input name="sitesearch" value="yegor256.com" type="hidden"> <input itemprop="query-input" type="text" id="search-query" class="field field-text" required="required" onfocus="$(&#39;.google&#39;).css(&#39;visibility&#39;, &#39;visible&#39;);" name="q" placeholder="Search..." autocomplete="off"> <input type="image" src="./Java Method Logging with AOP and Annotations_files/google-search-icon.svg" class="google" title="Search via Google" alt="Search via Google"> </form></div><div class="hot"><ul> <li> I have a limited job offer for you, if you are a Java developer and you live in Moscow, Russia. It's a full-time job in a large Fortune-100 company, which is attempting to get into the open source marketplace and we are here to help them. Here is the <a href="https://www.yegor256.com/pdf/job-description.pdf">job description</a>, <a href="mailto:job@yegor256.com">email me</a> if interested, ASAP. </li></ul></div></header></div><section itemscope="" itemtype="http://schema.org/BlogPosting"><div class="wrapper"> <header><p class="printable"> <img src="./Java Method Logging with AOP and Annotations_files/saved_resource" style="width:125px;height:125px;" alt="QR code"></p><p class="printable"> <code itemprop="url">https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html</code></p><h1 itemprop="name headline mainEntityOfPage">Java Method Logging with AOP and Annotations</h1><ul class="subline"> <li> <time itemprop="datePublished" datetime="2014-06-01T00:00:00+00:00"> 1 June 2014 </time> </li> <li class="printable" itemscope="" itemprop="author" itemtype="http://schema.org/Person"> <span itemprop="name">Yegor Bugayenko</span> </li> <li class="unprintable"> <i class="icon icon-comments"></i> <a href="http://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html#disqus_thread" itemprop="discussionUrl">56 comments</a> </li></ul><p class="unprintable"><a href="https://www.yegor256.com/tag/aop.html" class="tag notranslate">aop</a> <a href="https://www.yegor256.com/tag/java.html" class="tag notranslate"><img src="./Java Method Logging with AOP and Annotations_files/java-icon.svg" alt="Java">java</a> <a href="https://www.yegor256.com/tag/jcabi.html" class="tag notranslate">jcabi</a> <a href="https://www.yegor256.com/tag/logging.html" class="tag notranslate">logging</a></p><nav class="buttons notranslate desktop-only"> <a href="http://www.facebook.com/sharer/sharer.php?u=https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html" title="Share on Facebook" class="button" rel="nofollow"> <span class="count count-facebook">0</span> <i class="icon icon-facebook notranslate" aria-hidden="true"></i> </a> <a href="https://twitter.com/share?url=https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html&amp;text=Java+Method+Logging+with+AOP+and+Annotations" title="Share on Twitter" class="button" rel="nofollow"> <span class="count count-twitter">0</span> <i class="icon icon-twitter notranslate" aria-hidden="true"></i> </a> <a href="https://www.linkedin.com/cws/share?url=https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html" title="Share on LinkedIn" class="button" rel="nofollow"> <span class="count count-linkedin">0</span> <i class="icon icon-linkedin notranslate" aria-hidden="true"></i> </a> <a href="http://reddit.com/submit?url=https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html%3F2014-22&amp;title=Java+Method+Logging+with+AOP+and+Annotations" title="Share on Reddit" class="button" rel="nofollow"> <span class="count count-reddit">0</span> <i class="icon icon-reddit notranslate" aria-hidden="true"></i> </a> <a href="http://news.ycombinator.com/submitlink?u=https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html%3F2014-22&amp;t=Java+Method+Logging+with+AOP+and+Annotations" title="Share on Hacker News" class="button" rel="nofollow"> <span class="count count-hackernews">0</span> <i class="icon icon-hackernews notranslate" aria-hidden="true"></i> </a> </nav> </header> <article class="main" itemprop="articleBody"><div><p>Sometimes, I want to log (through <a href="http://www.slf4j.org/" class="foreign">slf4j</a> and <a href="http://logging.apache.org/log4j/2.x/" class="foreign">log4j</a>) every execution of a method, seeing what arguments it receives, what it returns and how much time every execution takes. This is how I’m doing it, with help of <a href="http://eclipse.org/aspectj/" class="foreign">AspectJ</a>, <a href="http://aspects.jcabi.com/" class="foreign">jcabi-aspects</a> and Java 6 <a href="https://www.yegor256.com/2016/04/12/java-annotations-are-evil.html">annotations</a>:</p><figure class="highlight"><pre><code class="language-java" data-lang="java"><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Foo</span> <span class="o">{</span>
  <span class="nd">@Loggable</span>
  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">power</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">p</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span></code></pre></figure><p>This is what I see in log4j output:</p><figure class="highlight"><pre><code class="language-text" data-lang="text"><span></span>[INFO] com.example.Foo #power(2, 10): 1024 in 12μs
[INFO] com.example.Foo #power(3, 3): 27 in 4μs</code></pre></figure><p>Nice, isn’t it? Now, let’s see how it works.</p><h2 id="annotation-with-runtime-retention" name="annotation-with-runtime-retention">Annotation with Runtime Retention<a class="link" href="https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html#annotation-with-runtime-retention"><i class="icon icon-link notranslate"></i></a></h2><p><a href="http://en.wikipedia.org/wiki/Java_annotation" class="foreign">Annotations</a> is a technique introduced in Java 6. It is a meta-programming instrument that doesn’t change the way code works, but gives marks to certain elements (methods, classes or variables). In other words, annotations are just markers attached to the code that can be seen and read. Some annotations are designed to be seen at compile time only—they don’t exist in <code>.class</code> files after compilation. Others remain visible after compilation and can be accessed in runtime.</p><aside class="youtube"> <a href="https://www.youtube.com/watch?v=4SRoLYxvIQ8"><div class="box"> <img src="./Java Method Logging with AOP and Annotations_files/mqdefault.jpg" alt="YouTube video #4SRoLYxvIQ8"><div class="play"><i class="icon icon-play"></i></div></div></a><div>Practical Example of AOP with AspectJ (in Russian with English subtitles); 28 October 2016.</div></aside><p>For example, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Override.html" class="foreign"><code>@Override</code></a> is of the first type (its retention type is <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/RetentionPolicy.html#SOURCE" class="foreign"><code>SOURCE</code></a>), while <a href="http://junit.sourceforge.net/javadoc/org/junit/Test.html" class="foreign"><code>@Test</code></a> from JUnit is of the second type (retention type is <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/RetentionPolicy.html#RUNTIME" class="foreign"><code>RUNTIME</code></a>). <a href="http://aspects.jcabi.com/apidocs-0.15.1/com/jcabi/aspects/Loggable.html" class="foreign"><code>@Loggable</code></a>—the one I’m using in the script above—is an annotation of the second type, from <a href="http://aspects.jcabi.com/" class="foreign">jcabi-aspects</a>. It stays with the byte-code in the <code>.class</code> file after compilation.</p><p>Again, it is important to understand that even though method <code>power()</code> is annotated and compiled, it doesn’t send anything to slf4j so far. It just contains a marker saying “please, log my execution.”</p><h2 id="aspect-oriented-programming-aop" name="aspect-oriented-programming-aop">Aspect Oriented Programming (AOP)<a class="link" href="https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html#aspect-oriented-programming-aop"><i class="icon icon-link notranslate"></i></a></h2><p><a href="http://en.wikipedia.org/wiki/Aspect-oriented_programming" class="foreign">AOP</a> is a useful technique that enables adding executable blocks to the source code without explicitly changing it. In our example, we don’t want to log method execution inside the class. Instead, we want some other class to intercept every call to method <code>power()</code>, measure its execution time and send this information to slf4j.</p><p>We want that interceptor to understand our <code>@Loggable</code> annotation and log every call to that specific method <code>power()</code>. And, of course, the same interceptor should be used for other methods where we’ll place the same annotation in the future.</p><p>This case perfectly fits the original intent of AOP—to avoid re-implementation of some common behavior in multiple classes.</p><p>Logging is a supplementary feature to our main functionality, and we don’t want to pollute our code with multiple logging instructions. Instead, we want <a href="https://www.yegor256.com/2014/05/23/avoid-java-static-logger.html">logging</a> to happen behind the scenes.</p><p>In terms of AOP, our solution can be explained as creating an <strong>aspect</strong> that <strong>cross-cuts</strong> the code at certain <strong>join points</strong> and applies an <strong>around advice</strong> that implements the desired functionality.</p><h2 id="aspectj" name="aspectj">AspectJ<a class="link" href="https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html#aspectj"><i class="icon icon-link notranslate"></i></a></h2><p>Let’s see what these magic words mean. But, first, let’s see how <a href="http://aspects.jcabi.com/" class="foreign">jcabi-aspects</a> implements them using <a href="http://eclipse.org/aspectj/" class="foreign">AspectJ</a> (it’s a simplified example, full code you can find in <a href="https://github.com/jcabi/jcabi-aspects/blob/jcabi-0.15.2/src/main/java/com/jcabi/aspects/aj/MethodLogger.java" class="foreign"><code>MethodLogger.java</code></a>):</p><figure class="highlight"><pre><code class="language-java" data-lang="java"><span></span><span class="nd">@Aspect</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MethodLogger</span> <span class="o">{</span>
  <span class="nd">@Around</span><span class="o">(</span><span class="s">"execution(* *(..)) &amp;&amp; @annotation(Loggable)"</span><span class="o">)</span>
  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">around</span><span class="o">(</span><span class="n">ProceedingJoinPoint</span> <span class="n">point</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
    <span class="n">Object</span> <span class="n">result</span> <span class="o">=</span> <span class="n">point</span><span class="o">.</span><span class="na">proceed</span><span class="o">();</span>
    <span class="n">Logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span>
      <span class="s">"#%s(%s): %s in %[msec]s"</span><span class="o">,</span>
      <span class="n">MethodSignature</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">cast</span><span class="o">(</span><span class="n">point</span><span class="o">.</span><span class="na">getSignature</span><span class="o">()).</span><span class="na">getMethod</span><span class="o">().</span><span class="na">getName</span><span class="o">(),</span>
      <span class="n">point</span><span class="o">.</span><span class="na">getArgs</span><span class="o">(),</span>
      <span class="n">result</span><span class="o">,</span>
      <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">start</span>
    <span class="o">);</span>
    <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span></code></pre></figure><p>This is an <strong>aspect</strong> with a single <strong>around advice</strong> <code>around()</code> inside. The aspect is annotated with <code>@Aspect</code> and advice is annotated with <code>@Around</code>. As discussed above, these annotations are just markers in <code>.class</code> files. They don’t do anything except provide some meta-information to those who are interested in runtime.</p><p>Annotation <code>@Around</code> has one parameter, which—in this case—says that the advice should be applied to a method if:</p><ol> <li><p>its visibility modifier is <code>*</code> (<code>public</code>, <code>protected</code> or <code>private</code>);</p></li> <li><p>its name is <code>*</code> (any name);</p></li> <li><p>its arguments are <code>..</code> (any arguments); and</p></li> <li><p>it is annotated with <code>@Loggable</code></p></li> </ol><p>When a call to an annotated method is to be intercepted, method <code>around()</code> executes before executing the actual method. When a call to method <code>power()</code> is to be intercepted, method <code>around()</code> receives an instance of class <code>ProceedingJoinPoint</code> and must return an object, which will be used as a result of method <code>power()</code>.</p><p>In order to call the original method, <code>power()</code>, the advice has to call <code>proceed()</code> of the <strong>join point</strong> object.</p><p>We compile this aspect and make it available in classpath together with our main file <code>Foo.class</code>. So far so good, but we need to take one last step in order to put our aspect into action—we should <strong>apply</strong> our advice.</p><h2 id="binary-aspect-weaving" name="binary-aspect-weaving">Binary Aspect Weaving<a class="link" href="https://www.yegor256.com/2014/06/01/aop-aspectj-java-method-logging.html#binary-aspect-weaving"><i class="icon icon-link notranslate"></i></a></h2><p>Aspect weaving is the name of the advice applying process. Aspect weaver modifies original code by injecting calls to aspects. AspectJ does exactly that. We give it two binary Java classes <code>Foo.class</code> and <code>MethodLogger.class</code>; it gives back three—modified <code>Foo.class</code>, <code>Foo$AjcClosure1.class</code> and unmodified <code>MethodLogger.class</code>.</p><aside class="quote">Without weaving, both classes and aspects are just compiled Java binaries with attached annotations </aside><p>In order to understand which advice should be applied to which methods, AspectJ weaver is using annotations from <code>.class</code> files. Also, it uses <a href="http://docs.oracle.com/javase/tutorial/reflect/" class="foreign">reflection</a> to browse all classes on classpath. It analyzes which methods satisfy the conditions from the <code>@Around</code> annotation. Of course, it finds our method <code>power()</code>.</p><p>So, there are two steps. First, we compile our <code>.java</code> files using <code>javac</code> and get two files. Then, AspectJ weaves/modifies them and creates its own extra class. Our <code>Foo</code> class looks something like this after weaving:</p><figure class="highlight"><pre><code class="language-java" data-lang="java"><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Foo</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kd">final</span> <span class="n">MethodLogger</span> <span class="n">logger</span><span class="o">;</span>
  <span class="nd">@Loggable</span>
  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">power</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">// Prepares the "point" object</span>
    <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">logger</span><span class="o">.</span><span class="na">around</span><span class="o">(</span><span class="n">point</span><span class="o">);</span>
  <span class="o">}</span>
  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">power_aroundBody</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">p</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span></code></pre></figure><p>AspectJ weaver moves our original functionality to a new method, <code>power_aroundBody()</code>, and redirects all <code>power()</code> calls to the aspect class <code>MethodLogger</code>.</p><p>Instead of one method <code>power()</code> in class <code>Foo</code> now we have four classes working together. From now on, this is what happens behind the scenes on every call to <code>power()</code>:</p><p><img src="./Java Method Logging with AOP and Annotations_files/52d3d016f2264bbf660a23d5bbe84203.svg" alt="PlantUML SVG diagram" class="plantuml"></p><p>Original functionality of method <code>power()</code> is indicated by the small green lifeline on the diagram.</p><p>As you see, the aspect weaving process connects together classes and aspects, transferring calls between them through join points. Without weaving, both classes and aspects are just compiled Java binaries with attached annotations.</p><h1 id="jcabi-aspects">jcabi-aspects</h1><p><a href="http://aspects.jcabi.com/" class="foreign">jcabi-aspects</a> is a JAR library that contains <code>Loggable</code> annotation and <code>MethodLogger</code> aspect (btw, there are <a href="http://aspects.jcabi.com/" class="foreign">many more</a> aspects and annotations). You don’t need to write your own aspect for method logging. Just add a few dependencies to your classpath and configure <a href="http://plugin.jcabi.com/" class="foreign">jcabi-maven-plugin</a> for aspect weaving (get their latest versions in <a href="http://search.maven.org/" class="foreign">Maven Central</a>):</p><figure class="highlight"><pre><code class="language-xml" data-lang="xml"><span></span><span class="nt">&lt;project&gt;</span>
  <span class="nt">&lt;dependencies&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>com.jcabi<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>jcabi-aspects<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.aspectj<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>aspectjrt<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
  <span class="nt">&lt;/dependencies&gt;</span>
  <span class="nt">&lt;build&gt;</span>
    <span class="nt">&lt;plugins&gt;</span>
      <span class="nt">&lt;plugin&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>com.jcabi<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>jcabi-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;executions&gt;</span>
          <span class="nt">&lt;execution&gt;</span>
            <span class="nt">&lt;goals&gt;</span>
              <span class="nt">&lt;goal&gt;</span>ajc<span class="nt">&lt;/goal&gt;</span>
            <span class="nt">&lt;/goals&gt;</span>
          <span class="nt">&lt;/execution&gt;</span>
        <span class="nt">&lt;/executions&gt;</span>
      <span class="nt">&lt;/plugin&gt;</span>
    <span class="nt">&lt;/plugins&gt;</span>
  <span class="nt">&lt;/build&gt;</span>
<span class="nt">&lt;/project&gt;</span></code></pre></figure><p>Since this weaving procedure takes a lot of configuration effort, I created a convenient Maven plugin with an <code>ajc</code> goal, which does the entire aspect weaving job. You can use AspectJ directly, but I recommend that you use <a href="http://plugin.jcabi.com/" class="foreign">jcabi-maven-plugin</a>.</p><p>That’s it. Now you can use <a href="http://aspects.jcabi.com/apidocs-0.15.1/com/jcabi/aspects/Loggable.html" class="foreign"><code>@com.jcabi.aspects.Loggable</code></a> annotation and your methods will be logged through slf4j.</p><p>If something doesn’t work as explained, don’t hesitate to submit a <a href="https://github.com/jcabi/jcabi-aspects/issues" class="foreign">GitHub issue</a>.</p></div></article></div><div class="wrapper"> <related-posts></related-posts></div><div class="disqus" role="complementary"><p class="disqus_hint"> Please, use <a href="https://help.disqus.com/commenting/what-html-tags-are-allowed-within-comments">syntax highlighting</a> in your comments, to make them more readable.</p><div id="disqus_thread" class="disqus-thread"><iframe id="dsq-app8979" name="dsq-app8979" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./Java Method Logging with AOP and Annotations_files/saved_resource.html" style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 6920px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe></div><script> var disqus_config = function () { this.page.url = document.location.href.split('?')[0].split('#')[0].replace('https://', 'http://'); this.page.identifier = this.page.url; }; (function() { var d = document, s = d.createElement('script'); s.src = '//yegor256.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); </script> <noscript><div><p class="red"> JavaScript is disabled in your browser, that's why you can't see comments under this post.</p></div></noscript></div><div class="wrapper"> <footer class="footer"><p> © <span itemscope="" itemprop="copyrightHolder" itemtype="http://schema.org/Person"> <span itemprop="name">Yegor Bugayenko</span> </span> 2014–<span itemprop="copyrightYear">2019</span></p></footer></div></section><div class="wrapper unprintable" style="text-align:center;margin-top:2em;"> <a href="https://www.sixnines.io/h/3ba1652f"> <img src="./Java Method Logging with AOP and Annotations_files/3ba1652f" alt="sixnines availability badge"></a> &nbsp; <a href="https://github.com/yegor256/blog/stargazers"> <img src="./Java Method Logging with AOP and Annotations_files/blog.svg" alt="GitHub stars"></a></div><script src="./Java Method Logging with AOP and Annotations_files/jquery-1.9.0.min.js"></script> <script src="./Java Method Logging with AOP and Annotations_files/all.js"></script> <script>var disqus_shortname = 'yegor256';</script> <script id="dsq-count-scr" src="./Java Method Logging with AOP and Annotations_files/count.js" async="async"></script> <script> (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-1963507-32', 'auto'); ga('send', 'pageview'); </script> <script> Cd=document;Cr="&"+Math.random();Cp="&s=1"; Cd.cookie="b=b";if(Cd.cookie)Cp+="&c=1"; Cp+="&t="+(new Date()).getTimezoneOffset(); if(self!=top)Cp+="&f=1"; </script> <script> if(navigator.javaEnabled())Cp+="&j=1"; </script> <script> if(typeof(screen)!='undefined')Cp+="&w="+screen.width+"&h="+ screen.height+"&d="+(screen.colorDepth?screen.colorDepth:screen.pixelDepth); </script> <script> Cd.write("<img src='//c.hit.ua/hit?i=95870&g=0&x=2"+Cp+Cr+ "&r="+escape(Cd.referrer)+"&u="+escape(window.location.href)+ "' border='0' wi"+"dth='1' he"+"ight='1'/>"); </script><img src="./Java Method Logging with AOP and Annotations_files/hit" border="0" width="1" height="1"> <script type="application/ld+json"> { "@context": "http://schema.org", "@type": "Person", "name": "Yegor Bugayenko", "url": "https://www.yegor256.com", "sameAs": [ "https://www.facebook.com/yegor256", "https://instagram.com/yegor256", "https://www.linkedin.com/in/yegor256", "https://twitter.com/yegor256", "https://github.com/yegor256", "https://www.pinterest.com/yegor256/" ] } </script>  
<iframe style="display: none;" src="./Java Method Logging with AOP and Annotations_files/saved_resource(1).html"></iframe></body></html>