<!DOCTYPE html>
<!-- saved from url=(0086)https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/ -->
<html lang="en-US" class="jetpack-lazy-images-js-enabled js"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/async-ads.js"></script><meta name="viewport" content="width=device-width"><link rel="profile" href="https://gmpg.org/xfn/11"><link rel="pingback" href="https://makeinjava.com/xmlrpc.php">
<!--[if lt IE 9]> <script src=https://makeinjava.com/wp-content/themes/iconic-one/js/html5.js></script> <![endif]--> <script type="text/javascript" async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f.txt"></script><script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/analytics.js"></script><script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f(1).txt" type="text/javascript"></script> <script type="text/javascript">(adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-5895285707798114",
          enable_page_level_ads: true
     });</script> <style id="aoatfcss" media="all">.screen-reader-text{position:absolute;top:-10000em;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0}.wp-block-media-text .wp-block-media-text__media{grid-area:media-text-media;margin:0}.wp-block-media-text .wp-block-media-text__content{word-break:break-word;grid-area:media-text-content;padding:0 8%}html,body,div,h1,p,a,ins,ul,li,form,label,article,aside,header,nav{margin:0;padding:0;border:0;font-size:100%;vertical-align:baseline}body{line-height:1}ul{list-style:none}h1{clear:both}html{overflow-y:scroll;font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}article,aside,header,nav{display:block}.io-title-description{display:inline-block;margin:17px 0;padding:14px 0;float:none}.io-title-description a{font-size:34px;font-weight:400;text-decoration:none;padding-left:15px;color:#444;text-shadow:.1px 1px 2px #888}.io-title-description .site-description{font-weight:400;padding-left:18px;line-height:2;font-size:12px;text-shadow:.1px 1px 2px #ccc}ins{background:0 0;text-decoration:none}.clear:after,.wrapper:after{clear:both}.clear:before,.clear:after,.wrapper:before,.wrapper:after{display:table;content:""}.wrapper{border:1px solid #e9e9e9}button,input{border:1px solid #ccc;border-radius:0;font-family:inherit;margin-right:0;margin-bottom:7px;padding:8px 10px}button,input{line-height:normal}#searchsubmit{background:#00a1e0;border:0;color:#fff;min-width:24%}input[type=submit]{-webkit-appearance:none}input[type=hidden]{border:0;border-radius:0;padding:0}html{font-size:90.5%}body{font-size:14px;font-family:"Ubuntu",Helvetica,Arial,sans-serif;text-rendering:optimizeLegibility;color:#444}a{outline:none;color:#0b91ea;text-decoration:none}.assistive-text,.site .screen-reader-text{position:absolute!important;clip:rect(1px,1px,1px,1px)}.site{padding:0 24px;background-color:#fff}.site-content{margin:0 14px}.widget-area{margin-top:10px}.site-header{border-left:1px solid #e9e9e9;border-right:1px solid #e9e9e9;border-top:1px solid #e9e9e9;height:auto;margin-bottom:24px;text-align:left}.themonic-nav{box-shadow:1px 2px 9px 1px #f8f8f8;text-align:center;float:left;width:100%}.themonic-nav li{font-size:12px;line-height:1.42857143;width:auto}.themonic-nav li a{padding:0 20px}.widget-area .widget{-webkit-hyphens:auto;-moz-hyphens:auto;hyphens:auto;margin-bottom:20px;line-height:1.4;word-wrap:break-word}.widget-area .widget-title{background:#f2f2f2;font-size:16px}.widget.widget_search{margin-bottom:14px}.widget-area .widget li,.widget-area .widget .textwidget{font-size:13px;line-height:1.646153846;border-bottom:1px solid #e9e9e9;padding:5px 0}.widget-area .widget p{margin-bottom:12px;padding:8px 10px}.widget-area .widget a{color:#757575;text-decoration:none;font-size:98%}.widget-area #s{margin-right:-4px;width:67.9999%}.entry-header{margin-bottom:20px}.entry-header .entry-title{font-size:28px;line-height:1.2;font-weight:400;margin-bottom:20px}.entry-content{line-height:1.7}.entry-content p{margin:0 0 20px;line-height:1.7}.site-content article{border-bottom:2px double #f3f3f3;margin-bottom:28px;padding-bottom:24px;word-wrap:break-word;-webkit-hyphens:auto;-moz-hyphens:auto;hyphens:auto}.required{color:red}.widget_search label{display:block;font-size:13px;line-height:1.846153846}@media screen and (max-width:768px){.nav-menu li{display:none}.themonic-nav ul{display:none}.themonic-nav li a,.themonic-nav li{display:none}.themonic-nav ul.nav-menu{display:none}.site-header{text-align:center;height:auto;border:none}.themonic-nav{box-shadow:none}.entry-header .entry-title{margin-top:20px}.wrapper{border:none}}@media screen and (max-width:1040px){#searchsubmit{margin-left:0}}@media screen and (max-width:420px){.site-header{height:auto;border:none}.entry-header .entry-title{font-size:20px}}@media screen and (min-width:768px){.site{margin:0 auto;max-width:1040px}.site-content{border-right:1px solid #f1f1f1;float:left;margin:0 1%;padding:30px 2% 0 1%;width:63.2%}.widget-area{float:right;margin:24px 0;padding:0 2% 0 0;width:28.7%}.themonic-nav ul.nav-menu{background:none repeat scroll 0 0 #f3f3f3;border-bottom:5px solid #16a1e7;border-top:1px solid #ededed;display:inline-block!important;text-align:left;width:100%}.themonic-nav ul{margin:0;text-indent:0}.themonic-nav li a,.themonic-nav li{display:inline-block;text-decoration:none}.themonic-nav li a{border-bottom:0;color:#6a6a6a;line-height:3.692307692;padding:0 20px;text-transform:uppercase;white-space:nowrap}.themonic-nav li{position:relative}.themonic-nav li ul{display:none;margin:0;padding:0;position:absolute;top:100%;z-index:999}.themonic-nav li ul ul{top:0;left:100%}.themonic-nav li ul li a{background:#efefef;border-bottom:1px solid #f9f9f9;display:block;font-size:11px;line-height:2.181818182;padding:8px 10px;width:160px;white-space:normal}.themonic-nav .current-menu-item>a,.themonic-nav .current_page_item>a{background:none repeat scroll 0 0 #16a1e7;color:#fff;font-weight:700}.entry-header .entry-title{font-size:28px;margin-bottom:20px}}@media screen and (min-width:960px){body{background-color:#e6e6e6}body .site{padding:24px 24px 0;margin-bottom:24px}}@media screen and (max-width:768px){.themonic-nav ul.nav-menu,.themonic-nav li{background:0 0;border-bottom:none;border-top:none;display:none}}@media screen and (max-width:440px){.site{padding:0 10px}.widget-area{padding:0 10px}.entry-header{margin-bottom:10px}.entry-header .entry-title{margin-bottom:10px}}html,body,div,h1,p,a,ins,ul,li,form,label,article,aside,header,nav{margin:0;padding:0;border:0;font-size:100%;vertical-align:baseline}body{line-height:1}ul{list-style:none}h1{clear:both}html{overflow-y:scroll;font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}article,aside,header,nav{display:block}.io-title-description{display:inline-block;margin:17px 0;padding:14px 0;float:none}.io-title-description a{font-size:34px;font-weight:400;text-decoration:none;padding-left:15px;color:#444;text-shadow:.1px 1px 2px #888}.io-title-description .site-description{font-weight:400;padding-left:18px;line-height:2;font-size:12px;text-shadow:.1px 1px 2px #ccc}ins{background:0 0;text-decoration:none}.clear:after,.wrapper:after{clear:both}.clear:before,.clear:after,.wrapper:before,.wrapper:after{display:table;content:""}.wrapper{border:1px solid #e9e9e9}button,input{border:1px solid #ccc;border-radius:0;font-family:inherit;margin-right:0;margin-bottom:7px;padding:8px 10px}button,input{line-height:normal}#searchsubmit{background:#00a1e0;border:0;color:#fff;min-width:24%}input[type=submit]{-webkit-appearance:none}input[type=hidden]{border:0;border-radius:0;padding:0}html{font-size:90.5%}body{font-size:14px;font-family:"Ubuntu",Helvetica,Arial,sans-serif;text-rendering:optimizeLegibility;color:#444}a{outline:none;color:#0b91ea;text-decoration:none}.assistive-text,.site .screen-reader-text{position:absolute!important;clip:rect(1px,1px,1px,1px)}.site{padding:0 24px;background-color:#fff}.site-content{margin:0 14px}.widget-area{margin-top:10px}.site-header{border-left:1px solid #e9e9e9;border-right:1px solid #e9e9e9;border-top:1px solid #e9e9e9;height:auto;margin-bottom:24px;text-align:left}.themonic-nav{box-shadow:1px 2px 9px 1px #f8f8f8;text-align:center;float:left;width:100%}.themonic-nav li{font-size:12px;line-height:1.42857143;width:auto}.themonic-nav li a{padding:0 20px}.widget-area .widget{-webkit-hyphens:auto;-moz-hyphens:auto;hyphens:auto;margin-bottom:20px;word-wrap:break-word}.widget-area .widget-title{background:#f2f2f2;font-size:16px}.widget.widget_search{margin-bottom:14px}.widget-area .widget li,.widget-area .widget .textwidget{font-size:13px;line-height:1.646153846;border-bottom:1px solid #e9e9e9;padding:5px 0}.widget-area .widget p{margin-bottom:12px;padding:10px}.widget-area .widget a{color:#757575;text-decoration:none;font-size:98%}.widget-area #s{margin-right:-4px;width:67.9999%}.entry-header{margin-bottom:20px}.entry-header .entry-title{font-size:28px;line-height:1.2;font-weight:400;margin-bottom:20px}.entry-content{line-height:1.714285714}.entry-content p{margin:0 0 20px;line-height:1.714285714}.site-content article{border-bottom:2px double #f3f3f3;margin-bottom:28px;padding-bottom:24px;word-wrap:break-word;-webkit-hyphens:auto;-moz-hyphens:auto;hyphens:auto}.required{color:red}.widget_search label{display:block;font-size:13px;line-height:1.846153846}@media screen and (max-width:768px){.nav-menu li{display:none}.themonic-nav ul{display:none}.themonic-nav li a,.themonic-nav li{display:none}.themonic-nav ul.nav-menu{display:none}.site-header{text-align:center;height:auto;border:none}.themonic-nav{box-shadow:none}.entry-header .entry-title{margin-top:20px}.wrapper{border:none}}@media screen and (max-width:1040px){#searchsubmit{margin-left:0}}@media screen and (max-width:420px){.site-header{height:auto;border:none}.entry-header .entry-title{font-size:20px}}@media screen and (min-width:768px){.site{margin:0 auto;max-width:1040px}.site-content{border-right:1px solid #f1f1f1;float:left;margin:0 1%;padding:30px 2% 0 1%;width:63.2%}.widget-area{float:right;margin:24px 0;padding:0 2% 0 0;width:28.7%}.themonic-nav ul.nav-menu{background:none repeat scroll 0 0 #f3f3f3;border-bottom:5px solid #16a1e7;border-top:1px solid #ededed;display:inline-block!important;text-align:left;width:100%}.themonic-nav ul{margin:0;text-indent:0}.themonic-nav li a,.themonic-nav li{display:inline-block;text-decoration:none}.themonic-nav li a{border-bottom:0;color:#6a6a6a;line-height:3.692307692;padding:0 20px;text-transform:uppercase;white-space:nowrap}.themonic-nav li{position:relative}.themonic-nav li ul{display:none;margin:0;padding:0;position:absolute;top:100%;z-index:1}.themonic-nav li ul ul{top:0;left:100%}.themonic-nav li ul li a{background:#efefef;border-bottom:1px solid #f9f9f9;display:block;font-size:11px;line-height:2.181818182;padding:8px 10px;width:160px;white-space:normal}.themonic-nav .current-menu-item>a,.themonic-nav .current_page_item>a{background:none repeat scroll 0 0 #16a1e7;color:#fff;font-weight:700}.entry-header .entry-title{font-size:28px;margin-bottom:20px}}@media screen and (min-width:960px){body{background-color:#e6e6e6}body .site{padding:24px 24px 0;margin-bottom:24px}}@media screen and (max-width:768px){.themonic-nav ul.nav-menu,.themonic-nav li{background:0 0;border-bottom:none;border-top:none;display:none}}@media screen and (max-width:440px){.site{padding:0 10px}.widget-area{padding:0 10px}.entry-header{margin-bottom:10px}.entry-header .entry-title{margin-bottom:10px}}html,body,div,h1,p,a,ins,ul,li,form,label,article,aside,header,nav{margin:0;padding:0;border:0;font-size:100%;vertical-align:baseline}body{line-height:1}ul{list-style:none}h1{clear:both}html{overflow-y:scroll;font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}article,aside,header,nav{display:block}.io-title-description{display:inline-block;margin:17px 0;padding:14px 0;float:none}.io-title-description a{font-size:34px;font-weight:400;text-decoration:none;padding-left:15px;color:#444;text-shadow:.1px 1px 2px #888}.io-title-description .site-description{font-weight:400;padding-left:18px;line-height:2;font-size:12px;text-shadow:.1px 1px 2px #ccc}ins{background:0 0;text-decoration:none}.clear:after,.wrapper:after{clear:both}.clear:before,.clear:after,.wrapper:before,.wrapper:after{display:table;content:""}.wrapper{border:1px solid #e9e9e9}button,input{border:1px solid #ccc;border-radius:0;font-family:inherit;margin-right:0;margin-bottom:7px;padding:8px 10px}button,input{line-height:normal}#searchsubmit{background:#00a1e0;border:0;color:#fff;min-width:24%}input[type=submit]{-webkit-appearance:none}input[type=hidden]{border:0;border-radius:0;padding:0}html{font-size:90.5%}body{font-size:14px;font-family:"Ubuntu",Helvetica,Arial,sans-serif;text-rendering:optimizeLegibility;color:#444}a{outline:none;color:#0b91ea;text-decoration:none}.assistive-text,.site .screen-reader-text{position:absolute!important;clip:rect(1px,1px,1px,1px)}.site{padding:0 24px;background-color:#fff}.site-content{margin:0 14px}.widget-area{margin-top:10px}.site-header{border-left:1px solid #e9e9e9;border-right:1px solid #e9e9e9;border-top:1px solid #e9e9e9;height:auto;margin-bottom:24px;text-align:left}.themonic-nav{box-shadow:1px 2px 9px 1px #f8f8f8;text-align:center;float:left;width:100%}.themonic-nav li{font-size:12px;line-height:1.42857143;width:auto}.themonic-nav li a{padding:0 20px}.widget-area .widget{-webkit-hyphens:auto;-moz-hyphens:auto;hyphens:auto;margin-bottom:20px;word-wrap:break-word}.widget-area .widget-title{background:#f2f2f2;font-size:16px}.widget.widget_search{margin-bottom:14px}.widget-area .widget li,.widget-area .widget .textwidget{font-size:13px;line-height:1.646153846;border-bottom:1px solid #e9e9e9;padding:5px 0}.widget-area .widget p{margin-bottom:12px;padding:10px}.widget-area .widget a{color:#757575;text-decoration:none;font-size:98%}.widget-area #s{margin-right:-4px;width:67.9999%}.entry-header{margin-bottom:20px}.entry-header .entry-title{font-size:28px;line-height:1.2;font-weight:400;margin-bottom:20px}.entry-content{line-height:1.714285714}.entry-content p{margin:0 0 20px;line-height:1.714285714}.site-content article{border-bottom:2px double #f3f3f3;margin-bottom:28px;padding-bottom:24px;word-wrap:break-word;-webkit-hyphens:auto;-moz-hyphens:auto;hyphens:auto}.required{color:red}.widget_search label{display:block;font-size:13px;line-height:1.846153846}@media screen and (max-width:768px){.nav-menu li{display:none}.themonic-nav ul{display:none}.themonic-nav li a,.themonic-nav li{display:none}.themonic-nav ul.nav-menu{display:none}.site-header{text-align:center;height:auto;border:none}.themonic-nav{box-shadow:none}.entry-header .entry-title{margin-top:20px}.wrapper{border:none}}@media screen and (max-width:1040px){#searchsubmit{margin-left:0}}@media screen and (max-width:420px){.site-header{height:auto;border:none}.entry-header .entry-title{font-size:20px}}@media screen and (min-width:768px){.site{margin:0 auto;max-width:1040px}.site-content{border-right:1px solid #f1f1f1;float:left;margin:0 1%;padding:30px 2% 0 1%;width:63.2%}.widget-area{float:right;margin:24px 0;padding:0 2% 0 0;width:28.7%}.themonic-nav ul.nav-menu{background:none repeat scroll 0 0 #f3f3f3;border-bottom:5px solid #16a1e7;border-top:1px solid #ededed;display:inline-block!important;text-align:left;width:100%}.themonic-nav ul{margin:0;text-indent:0}.themonic-nav li a,.themonic-nav li{display:inline-block;text-decoration:none}.themonic-nav li a{border-bottom:0;color:#6a6a6a;line-height:3.692307692;padding:0 20px;text-transform:uppercase;white-space:nowrap}.themonic-nav li{position:relative}.themonic-nav li ul{display:none;margin:0;padding:0;position:absolute;top:100%;z-index:1}.themonic-nav li ul ul{top:0;left:100%}.themonic-nav li ul li a{background:#efefef;border-bottom:1px solid #f9f9f9;display:block;font-size:11px;line-height:2.181818182;padding:8px 10px;width:160px;white-space:normal}.themonic-nav .current-menu-item>a,.themonic-nav .current_page_item>a{background:none repeat scroll 0 0 #16a1e7;color:#fff;font-weight:700}.entry-header .entry-title{font-size:28px;margin-bottom:20px}}@media screen and (min-width:960px){body{background-color:#e6e6e6}body .site{padding:24px 24px 0;margin-bottom:24px}}@media screen and (max-width:768px){.themonic-nav ul.nav-menu,.themonic-nav li{background:0 0;border-bottom:none;border-top:none;display:none}}@media screen and (max-width:440px){.site{padding:0 10px}.widget-area{padding:0 10px}.entry-header{margin-bottom:10px}.entry-header .entry-title{margin-bottom:10px}}#subscribe-email input{width:95%}.screen-reader-text{border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute!important;width:1px;word-wrap:normal!important}.screen-reader-text{border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute!important;width:1px;word-wrap:normal!important}.io-title-description{margin:0!important}.entry-header .entry-title{font-size:21px}.themonic-nav li a{text-transform:none}</style><link rel="stylesheet" as="style" media="all" href="./Logging aspect in RESTful service using spring aop (log requests)_files/autoptimize_2ad0227e3d86f3cf70de14c59f35a282.css" onload="this.onload=null;this.rel=&#39;stylesheet&#39;"><noscript id="aonoscrcss"><link
type=text/css media=all href=https://makeinjava.com/wp-content/cache/autoptimize/css/autoptimize_2ad0227e3d86f3cf70de14c59f35a282.css rel=stylesheet></noscript><title>Logging aspect in RESTful service using spring aop (log requests)</title><meta name="description" content="RESTFul web service using spring AOP log request,response information. Create PointCut expression Before, After, Around in REST Web Service."><meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1"><link rel="canonical" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/"><meta property="og:locale" content="en_US"><meta property="og:type" content="article"><meta property="og:title" content="Logging aspect in RESTful service using spring aop (log requests)"><meta property="og:description" content="RESTFul web service using spring AOP log request,response information. Create PointCut expression Before, After, Around in REST Web Service."><meta property="og:url" content="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/"><meta property="og:site_name" content="Make in Java"><meta property="article:tag" content="AOP"><meta property="article:tag" content="J2EE and Enterprise Frameworks"><meta property="article:tag" content="Logging"><meta property="article:tag" content="REST"><meta property="article:tag" content="Spring"><meta property="article:section" content="Spring"><meta property="article:published_time" content="2016-01-22T17:06:04+00:00"><meta property="article:modified_time" content="2019-04-12T06:07:43+00:00"><meta property="og:updated_time" content="2019-04-12T06:07:43+00:00"><meta name="twitter:card" content="summary"><meta name="twitter:description" content="RESTFul web service using spring AOP log request,response information. Create PointCut expression Before, After, Around in REST Web Service."><meta name="twitter:title" content="Logging aspect in RESTful service using spring aop (log requests)"> <script type="application/ld+json" class="yoast-schema-graph yoast-schema-graph--main">{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://makeinjava.com/#website","url":"https://makeinjava.com/","name":"Make in Java","publisher":{"@id":"https://makeinjava.com/#/schema/person/"},"potentialAction":{"@type":"SearchAction","target":"https://makeinjava.com/?s={search_term_string}","query-input":"required name=search_term_string"}},{"@type":"WebPage","@id":"https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/#webpage","url":"https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/","inLanguage":"en-US","name":"Logging aspect in RESTful service using spring aop (log requests)","isPartOf":{"@id":"https://makeinjava.com/#website"},"datePublished":"2016-01-22T17:06:04+00:00","dateModified":"2019-04-12T06:07:43+00:00","description":"RESTFul web service using spring AOP log request,response information. Create PointCut expression Before, After, Around in REST Web Service."},{"@type":"Article","@id":"https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/#article","isPartOf":{"@id":"https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/#webpage"},"author":{"@id":"https://makeinjava.com/#/schema/person/c82734643033b90579f55506f48734b7"},"headline":"Logging aspect in RESTful web service &#8211; spring aop (log requests/responses)","datePublished":"2016-01-22T17:06:04+00:00","dateModified":"2019-04-12T06:07:43+00:00","commentCount":"6","mainEntityOfPage":{"@id":"https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/#webpage"},"publisher":{"@id":"https://makeinjava.com/#/schema/person/"},"keywords":"AOP,J2EE and Enterprise Frameworks,Logging,REST,Spring","articleSection":"Spring"},{"@type":["Person"],"@id":"https://makeinjava.com/#/schema/person/c82734643033b90579f55506f48734b7","name":"Yogesh","image":{"@type":"ImageObject","@id":"https://makeinjava.com/#authorlogo","url":"https://secure.gravatar.com/avatar/6a977e7aba5ce047376b92b3dde3c84c?s=96&d=mm&r=g","caption":"Yogesh"},"sameAs":[]}]}</script> <link rel="dns-prefetch" href="https://s0.wp.com/"><link rel="dns-prefetch" href="https://secure.gravatar.com/"><link rel="dns-prefetch" href="https://fonts.googleapis.com/"><link rel="dns-prefetch" href="https://s.w.org/"><link href="https://cdn.shortpixel.ai/" rel="preconnect"><link rel="alternate" type="application/rss+xml" title="Make in Java » Feed" href="https://makeinjava.com/feed/"><link rel="alternate" type="application/rss+xml" title="Make in Java » Comments Feed" href="https://makeinjava.com/comments/feed/"><link rel="alternate" type="application/rss+xml" title="Make in Java » Logging aspect in RESTful web service – spring aop (log requests/responses) Comments Feed" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/feed/"><noscript><link
crossorigin=anonymous rel=stylesheet id=themonic-fonts-css  href='https://fonts.googleapis.com/css?family=Ubuntu%3A400%2C700&#038;subset=latin%2Clatin-ext' type=text/css media=all></noscript><link crossorigin="anonymous" rel="stylesheet" as="style" onload="this.onload=null;this.rel=&#39;stylesheet&#39;" id="themonic-fonts-css" href="./Logging aspect in RESTful service using spring aop (log requests)_files/css" type="text/css" media="all"><!--[if lt IE 9]><link
rel=stylesheet id=themonic-ie-css  href='https://makeinjava.com/wp-content/themes/iconic-one/css/ie.css?ver=20130305' type=text/css media=all>
<![endif]--> <script async="async" src="./Logging aspect in RESTful service using spring aop (log requests)_files/jquery.js" type="text/javascript"></script> <link rel="https://api.w.org/" href="https://makeinjava.com/wp-json/"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://makeinjava.com/xmlrpc.php?rsd"><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://makeinjava.com/wp-includes/wlwmanifest.xml"><link rel="shortlink" href="https://wp.me/p73mUl-m7"><link rel="alternate" type="application/json+oembed" href="https://makeinjava.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fmakeinjava.com%2Flogging-aspect-restful-web-service-spring-aop-request-response%2F"><link rel="alternate" type="text/xml+oembed" href="https://makeinjava.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fmakeinjava.com%2Flogging-aspect-restful-web-service-spring-aop-request-response%2F&amp;format=xml"><link rel="dns-prefetch" href="https://v0.wordpress.com/"><link rel="dns-prefetch" href="https://widgets.wp.com/"><link rel="dns-prefetch" href="https://s0.wp.com/"><link rel="dns-prefetch" href="https://0.gravatar.com/"><link rel="dns-prefetch" href="https://1.gravatar.com/"><link rel="dns-prefetch" href="https://2.gravatar.com/"><link rel="dns-prefetch" href="https://i0.wp.com/"><link rel="dns-prefetch" href="https://i1.wp.com/"><link rel="dns-prefetch" href="https://i2.wp.com/"><link rel="amphtml" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/amp/">
<script type="text/javascript">(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-73605199-1', 'auto');
  ga('send', 'pageview');</script>
<noscript><link
rel=stylesheet type=text/css id=wp-custom-css href="https://makeinjava.com/?custom-css=4a34f94f96"></noscript><link rel="stylesheet" as="style" onload="this.onload=null;this.rel=&#39;stylesheet&#39;" type="text/css" id="wp-custom-css" href="./Logging aspect in RESTful service using spring aop (log requests)_files/saved_resource(1)"><script src="./Logging aspect in RESTful service using spring aop (log requests)_files/wp-emoji-release.min.js" type="text/javascript" defer=""></script><script async="" type="text/javascript" src="./Logging aspect in RESTful service using spring aop (log requests)_files/count.js"></script><script type="text/javascript" async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/embed.js"></script><link rel="stylesheet" type="text/css" id="gravatar-card-css" href="./Logging aspect in RESTful service using spring aop (log requests)_files/hovercard.min.css"><link rel="stylesheet" type="text/css" id="gravatar-card-services-css" href="./Logging aspect in RESTful service using spring aop (log requests)_files/services.min.css"><script src="./Logging aspect in RESTful service using spring aop (log requests)_files/cse_element__en.js" type="text/javascript"></script><link type="text/css" rel="stylesheet" href="./Logging aspect in RESTful service using spring aop (log requests)_files/default+en.css"><link type="text/css" rel="stylesheet" href="./Logging aspect in RESTful service using spring aop (log requests)_files/default.css"><style type="text/css">.gsc-control-cse{font-family:arial, sans-serif}.gsc-control-cse .gsc-table-result{font-family:arial, sans-serif}.gsc-refinementsGradient{background:linear-gradient(to left,rgba(255,255,255,1),rgba(255,255,255,0))}.gsc-control-cse{border-color:#FFFFFF;background-color:#FFFFFF}input.gsc-input,.gsc-input-box,.gsc-input-box-hover,.gsc-input-box-focus{border-color:#DFE1E5}.gsc-search-button-v2,.gsc-search-button-v2:hover,.gsc-search-button-v2:focus{border-color:#3079ED;background-color:#4D90FE;background-image:none;filter:none}.gsc-search-button-v2 svg{fill:#FFFFFF}.gsc-tabHeader.gsc-tabhActive,.gsc-refinementHeader.gsc-refinementhActive{color:#1A73E8;border-color:#1A73E8;background-color:#FFFFFF}.gsc-tabHeader.gsc-tabhInactive,.gsc-refinementHeader.gsc-refinementhInactive{color:#666666;border-color:#666666;background-color:#FFFFFF}.gsc-webResult.gsc-result,.gsc-results .gsc-imageResult{border-color:#FFFFFF;background-color:#FFFFFF}.gsc-webResult.gsc-result:hover,.gsc-imageResult:hover{border-color:#FFFFFF;background-color:#FFFFFF}.gs-webResult.gs-result a.gs-title:link,.gs-webResult.gs-result a.gs-title:link b,.gs-imageResult a.gs-title:link,.gs-imageResult a.gs-title:link b{color:#0000CC}.gs-webResult.gs-result a.gs-title:visited,.gs-webResult.gs-result a.gs-title:visited b,.gs-imageResult a.gs-title:visited,.gs-imageResult a.gs-title:visited b{color:#1155CC}.gs-webResult.gs-result a.gs-title:hover,.gs-webResult.gs-result a.gs-title:hover b,.gs-imageResult a.gs-title:hover,.gs-imageResult a.gs-title:hover b{color:#1155CC}.gs-webResult.gs-result a.gs-title:active,.gs-webResult.gs-result a.gs-title:active b,.gs-imageResult a.gs-title:active,.gs-imageResult a.gs-title:active b{color:#1155CC}.gsc-cursor-page{color:#0000CC}a.gsc-trailing-more-results:link{color:#0000CC}.gs-webResult .gs-snippet,.gs-imageResult .gs-snippet,.gs-fileFormatType{color:#000000}.gs-webResult div.gs-visibleUrl,.gs-imageResult div.gs-visibleUrl{color:#008000}.gs-webResult div.gs-visibleUrl-short{color:#008000}.gs-webResult div.gs-visibleUrl-short{display:none}.gs-webResult div.gs-visibleUrl-long{display:block}.gs-promotion div.gs-visibleUrl-short{display:none}.gs-promotion div.gs-visibleUrl-long{display:block}.gsc-cursor-box{border-color:#FFFFFF}.gsc-results .gsc-cursor-box .gsc-cursor-page{border-color:#666666;background-color:#FFFFFF;color:#666666}.gsc-results .gsc-cursor-box .gsc-cursor-current-page{border-color:#1A73E8;background-color:#FFFFFF;color:#1A73E8}.gsc-webResult.gsc-result.gsc-promotion{border-color:#FFFFFF;background-color:#F6F6F6}.gsc-completion-title{color:#0000CC}.gsc-completion-snippet{color:#000000}.gs-promotion a.gs-title:link,.gs-promotion a.gs-title:link *,.gs-promotion .gs-snippet a:link{color:#1155CC}.gs-promotion a.gs-title:visited,.gs-promotion a.gs-title:visited *,.gs-promotion .gs-snippet a:visited{color:#1155CC}.gs-promotion a.gs-title:hover,.gs-promotion a.gs-title:hover *,.gs-promotion .gs-snippet a:hover{color:#1155CC}.gs-promotion a.gs-title:active,.gs-promotion a.gs-title:active *,.gs-promotion .gs-snippet a:active{color:#1155CC}.gs-promotion .gs-snippet,.gs-promotion .gs-title .gs-promotion-title-right,.gs-promotion .gs-title .gs-promotion-title-right *{color:#333333}.gs-promotion .gs-visibleUrl,.gs-promotion .gs-visibleUrl-short{color:#009933}.gcsc-find-more-on-google{color:#0000CC}.gcsc-find-more-on-google-magnifier{fill:#0000CC}</style><style type="text/css">.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;position:relative;user-select:none;-webkit-user-select:none;white-space:nowrap}.gsst_e{vertical-align:middle;opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsq_a{padding:0}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em;-webkit-appearance:button}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gssb_a{padding:0 9px}.gsib_a{padding:5px 9px 4px 9px}.gscb_a{line-height:27px}.gssb_e{border:0}.gssb_l{margin:5px 0}input.gsc-input::-webkit-input-placeholder{font-size:14px}input.gsc-input:-moz-placeholder{font-size:14px}input.gsc-input::-moz-placeholder{font-size:14px}input.gsc-input:-ms-input-placeholder{font-size:14px}input.gsc-input:focus::-webkit-input-placeholder{color:transparent}input.gsc-input:focus:-moz-placeholder{color:transparent}input.gsc-input:focus::-moz-placeholder{color:transparent}input.gsc-input:focus:-ms-input-placeholder{color:transparent}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style><script src="./Logging aspect in RESTful service using spring aop (log requests)_files/count-data.js"></script><link rel="prefetch" as="style" href="https://c.disquscdn.com/next/embed/styles/lounge.91c71242b4acaa0ee7f9db125ef21f90.css"><link rel="prefetch" as="script" href="https://c.disquscdn.com/next/embed/common.bundle.0b9bbdb3bc568241a5d1d7626947e8b0.js"><link rel="prefetch" as="script" href="https://c.disquscdn.com/next/embed/lounge.bundle.0523614fef9787c3e3459e0602078385.js"><link rel="prefetch" as="script" href="https://disqus.com/next/config.js"><script src="./Logging aspect in RESTful service using spring aop (log requests)_files/alfie.f51946af45e0b561c60f768335c9eb79.js" async="" charset="UTF-8"></script></head><body class="post-template-default single single-post postid-1371 single-format-standard custom-font-enabled single-author"><div id="page" class="site"><header id="masthead" class="site-header" role="banner"><div class="io-title-description">
<a href="https://makeinjava.com/" title="Make in Java" rel="home">Make in Java</a>
<br ...="">
<a class="site-description">See the world from java perspective</a></div><nav id="site-navigation" class="themonic-nav" role="navigation">
<a class="assistive-text" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/#content" title="Skip to content">Skip to content</a><ul id="menu-top" class="nav-menu"><li id="menu-item-582" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-582"><a href="http://www.makeinjava.com/">Home</a></li><li id="menu-item-1739" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-1739"><a href="https://makeinjava.com/category/famous-interview-questions-arrays/">Array</a><ul class="sub-menu"><li id="menu-item-4730" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-4730"><a href="https://makeinjava.com/category/famous-interview-questions-arrays/sorting-algorithm/">Sorting Algorithm</a></li><li id="menu-item-4731" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-4731"><a href="https://makeinjava.com/category/famous-interview-questions-arrays/array-interview-questions/">Interview Questions</a></li></ul></li><li id="menu-item-975" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-975"><a href="https://makeinjava.com/category/linked-list/">Linked List</a><ul class="sub-menu"><li id="menu-item-4732" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-4732"><a href="https://makeinjava.com/category/linked-list/single-linkedlist/">Single LinkedList</a></li></ul></li><li id="menu-item-575" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-575"><a href="https://makeinjava.com/category/tree/">Tree</a><ul class="sub-menu"><li id="menu-item-3914" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3914"><a href="https://makeinjava.com/category/tree/binary-tree/">Binary Tree</a></li><li id="menu-item-576" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-576"><a href="https://makeinjava.com/category/binary-search-tree/">BST</a></li></ul></li><li id="menu-item-577" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-577"><a href="https://makeinjava.com/category/core-java/">Core Java</a><ul class="sub-menu"><li id="menu-item-3908" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3908"><a href="https://makeinjava.com/category/core-java/java-beginner-program-tutorial/">Beginner</a></li><li id="menu-item-2401" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2401"><a href="https://makeinjava.com/category/java-8/">Java 8</a></li><li id="menu-item-4735" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-4735"><a href="https://makeinjava.com/category/core-java/concurrency/">Concurrency</a></li><li id="menu-item-2400" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2400"><a href="https://makeinjava.com/category/exceptions/">Exceptions</a></li><li id="menu-item-2370" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2370"><a href="https://makeinjava.com/category/core-java/java-io/">Java IO</a></li></ul></li><li id="menu-item-2249" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-2249"><a href="https://makeinjava.com/category/collection/">Collection</a><ul class="sub-menu"><li id="menu-item-2250" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-2250"><a href="https://makeinjava.com/category/collection/list/">List</a><ul class="sub-menu"><li id="menu-item-2251" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2251"><a href="https://makeinjava.com/category/collection/list/arraylist/">ArrayList</a></li><li id="menu-item-2280" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2280"><a href="https://makeinjava.com/category/collection/list/linkedlist/">LinkedList</a></li></ul></li><li id="menu-item-2447" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-2447"><a href="https://makeinjava.com/category/collection/map/">Map</a><ul class="sub-menu"><li id="menu-item-2448" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2448"><a href="https://makeinjava.com/category/collection/map/hashmap/">HashMap</a></li><li id="menu-item-2485" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2485"><a href="https://makeinjava.com/category/collection/map/linkedhashmap/">LinkedHashMap</a></li><li id="menu-item-2507" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2507"><a href="https://makeinjava.com/category/collection/map/treemap/">TreeMap</a></li><li id="menu-item-2506" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2506"><a href="https://makeinjava.com/category/collection/map/enummap/">EnumMap</a></li></ul></li><li id="menu-item-2550" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-2550"><a href="https://makeinjava.com/category/collection/set/">Set</a><ul class="sub-menu"><li id="menu-item-2551" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2551"><a href="https://makeinjava.com/category/collection/set/hashset/">HashSet</a></li><li id="menu-item-2570" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2570"><a href="https://makeinjava.com/category/collection/set/linkedhashset/">LinkedHashSet</a></li></ul></li></ul></li><li id="menu-item-3592" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-3592"><a href="https://makeinjava.com/category/design/">Design</a><ul class="sub-menu"><li id="menu-item-3593" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-3593"><a href="https://makeinjava.com/category/principle/">principle</a><ul class="sub-menu"><li id="menu-item-3594" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3594"><a href="https://makeinjava.com/category/solid/">SOLID</a></li></ul></li></ul></li><li id="menu-item-1743" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1743"><a href="https://makeinjava.com/category/rest-web-service/">WebService</a></li><li id="menu-item-1740" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-1740"><a href="https://makeinjava.com/category/json/">JSON</a><ul class="sub-menu"><li id="menu-item-3916" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3916"><a href="https://makeinjava.com/category/json/jackson/">Jackson</a></li><li id="menu-item-3915" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3915"><a href="https://makeinjava.com/category/json/gson/">GSON</a></li></ul></li><li id="menu-item-5545" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5545"><a href="https://makeinjava.com/category/weblogic/">Weblogic</a></li><li id="menu-item-2807" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-2807"><a href="https://makeinjava.com/category/puzzle-or-logical-interview-questions/">Puzzle</a></li></ul><select class="selectnav" id="selectnav1"><option value="">Menu</option><option value="http://www.makeinjava.com/">Home</option><option value="https://makeinjava.com/category/famous-interview-questions-arrays/">Array</option><option value="https://makeinjava.com/category/famous-interview-questions-arrays/sorting-algorithm/">- Sorting Algorithm</option><option value="https://makeinjava.com/category/famous-interview-questions-arrays/array-interview-questions/">- Interview Questions</option><option value="https://makeinjava.com/category/linked-list/">Linked List</option><option value="https://makeinjava.com/category/linked-list/single-linkedlist/">- Single LinkedList</option><option value="https://makeinjava.com/category/tree/">Tree</option><option value="https://makeinjava.com/category/tree/binary-tree/">- Binary Tree</option><option value="https://makeinjava.com/category/binary-search-tree/">- BST</option><option value="https://makeinjava.com/category/core-java/">Core Java</option><option value="https://makeinjava.com/category/core-java/java-beginner-program-tutorial/">- Beginner</option><option value="https://makeinjava.com/category/java-8/">- Java 8</option><option value="https://makeinjava.com/category/core-java/concurrency/">- Concurrency</option><option value="https://makeinjava.com/category/exceptions/">- Exceptions</option><option value="https://makeinjava.com/category/core-java/java-io/">- Java IO</option><option value="https://makeinjava.com/category/collection/">Collection</option><option value="https://makeinjava.com/category/collection/list/">- List</option><option value="https://makeinjava.com/category/collection/list/arraylist/">-- ArrayList</option><option value="https://makeinjava.com/category/collection/list/linkedlist/">-- LinkedList</option><option value="https://makeinjava.com/category/collection/map/">- Map</option><option value="https://makeinjava.com/category/collection/map/hashmap/">-- HashMap</option><option value="https://makeinjava.com/category/collection/map/linkedhashmap/">-- LinkedHashMap</option><option value="https://makeinjava.com/category/collection/map/treemap/">-- TreeMap</option><option value="https://makeinjava.com/category/collection/map/enummap/">-- EnumMap</option><option value="https://makeinjava.com/category/collection/set/">- Set</option><option value="https://makeinjava.com/category/collection/set/hashset/">-- HashSet</option><option value="https://makeinjava.com/category/collection/set/linkedhashset/">-- LinkedHashSet</option><option value="https://makeinjava.com/category/design/">Design</option><option value="https://makeinjava.com/category/principle/">- principle</option><option value="https://makeinjava.com/category/solid/">-- SOLID</option><option value="https://makeinjava.com/category/rest-web-service/">WebService</option><option value="https://makeinjava.com/category/json/">JSON</option><option value="https://makeinjava.com/category/json/jackson/">- Jackson</option><option value="https://makeinjava.com/category/json/gson/">- GSON</option><option value="https://makeinjava.com/category/weblogic/">Weblogic</option><option value="https://makeinjava.com/category/puzzle-or-logical-interview-questions/">Puzzle</option></select></nav><div class="clear"></div></header><div id="main" class="wrapper"><div id="primary" class="site-content"><div id="content" role="main"><article id="post-1371" class="post-1371 post type-post status-publish format-standard hentry category-spring tag-aop tag-j2ee-and-enterprise-frameworks tag-logging tag-rest tag-spring"><header class="entry-header"><h1 class="entry-title">Logging aspect in RESTful web service – spring aop (log requests/responses)</h1><div class="below-title-meta"><div class="adt">
By <span class="vcard author">
<span class="fn"><a href="https://makeinjava.com/author/makeinjava/" title="Posts by Yogesh" rel="author">Yogesh</a></span>
</span>
<span class="meta-sep">|</span>
<span class="date updated">January 22, 2016</span></div><div class="adt-comment">
<a class="link-comments" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/#disqus_thread" data-disqus-identifier="1371 http://www.makeinjava.com/?p=1371">9 Comments</a></div></div></header><div class="entry-content"><ul><li>Logging request &amp; response information is basic requirement of enterprise RESTFul web service.</li><li>We will create RESTFul web service using Spring.</li><li>We have already&nbsp;discussed <a href="http://www.makeinjava.com/what-aspect-oriented-programming-aop-in-spring/">what is aspect oriented programming</a>.</li></ul><h2><strong>RESTFul Service – Spring AOP Logging Aspect?</strong></h2><ol><li>Create RESTFul&nbsp;web service using spring framework.<ul><li>Create REST resource BookingController to book hotel &amp;&nbsp;retrieve booking information</li><li>POST&nbsp;resource hotel booking taking required customer information</li><li>GET resource to simulate to retrieval of hotel booking</li></ul></li><li>Create a logging aspect.<ul><li>Create logging aspect using spring aop</li><li>Create join points</li><li>Create pointcut expressions</li></ul></li><li>Usage of pointcut expressions with following advices<ul><li>Before advice</li><li>After advice</li><li>Around advice</li><li>AfterThrowing</li><li>AfterReturning</li></ul></li><li>Generate request response logs.<ul><li>Log request &amp; response information using logging framework like Log4J.</li></ul></li></ol><h2>Program –&nbsp;Logging aspect in RESTful web service using spring aop</h2><h2><strong>1.) Spring AOP Logging Aspect:</strong></h2><ul><li>Create a logging aspect LoggingHandler&nbsp;using spring aop</li><li>Create point cut expression<ol><li>controller</li><li>allMethod</li><li>loggingPublicOperation</li><li>logAnyFunctionWithinResource</li></ol></li></ul><pre class=" language-java"><code class=" language-java">
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Enumeration<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>ReflectionToStringBuilder<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>JoinPoint<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ProceedingJoinPoint<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>AfterReturning<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>AfterThrowing<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Around<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Aspect<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Before<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Pointcut<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Aspect</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoggingHandler</span> <span class="token punctuation">{</span>

	Logger log <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"within(@org.springframework.stereotype.Controller *)"</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"execution(* *.*(..))"</span><span class="token punctuation">)</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">allMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"execution(public * *(..))"</span><span class="token punctuation">)</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loggingPublicOperation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"execution(* *.*(..))"</span><span class="token punctuation">)</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loggingAllOperation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"within(org.learn.log..*)"</span><span class="token punctuation">)</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">logAnyFunctionWithinResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	<span class="token comment" spellcheck="true">//before -&gt; Any resource annotated with @Controller annotation </span>
	<span class="token comment" spellcheck="true">//and all method and function taking HttpServletRequest as first parameter</span>
	<span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"controller() &amp;&amp; allMethod() &amp;&amp; args(..,request)"</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logBefore</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Entering in Method :  "</span> <span class="token operator">+</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Class Name :  "</span> <span class="token operator">+</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaringTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Arguments :  "</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Target class : "</span> <span class="token operator">+</span> joinPoint<span class="token punctuation">.</span><span class="token function">getTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">!=</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Start Header Section of request "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Method Type : "</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			Enumeration headerNames <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeaderNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">while</span> <span class="token punctuation">(</span>headerNames<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				String headerName <span class="token operator">=</span> headerNames<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				String headerValue <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>headerName<span class="token punctuation">)</span><span class="token punctuation">;</span>
				log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Header Name: "</span> <span class="token operator">+</span> headerName <span class="token operator">+</span> <span class="token string">" Header Value : "</span> <span class="token operator">+</span> headerValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Request Path info :"</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getServletPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"End Header Section of request "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment" spellcheck="true">//After -&gt; All method within resource annotated with @Controller annotation </span>
	<span class="token comment" spellcheck="true">// and return a  value</span>
	<span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>pointcut <span class="token operator">=</span> <span class="token string">"controller() &amp;&amp; allMethod()"</span><span class="token punctuation">,</span> returning <span class="token operator">=</span> <span class="token string">"result"</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logAfter</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> Object result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		String returnValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
		log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Method Return value : "</span> <span class="token operator">+</span> returnValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment" spellcheck="true">//After -&gt; Any method within resource annotated with @Controller annotation </span>
	<span class="token comment" spellcheck="true">// throws an exception ...Log it</span>
	<span class="token annotation punctuation">@AfterThrowing</span><span class="token punctuation">(</span>pointcut <span class="token operator">=</span> <span class="token string">"controller() &amp;&amp; allMethod()"</span><span class="token punctuation">,</span> throwing <span class="token operator">=</span> <span class="token string">"exception"</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logAfterThrowing</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> Throwable exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"An exception has been thrown in "</span> <span class="token operator">+</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" ()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Cause : "</span> <span class="token operator">+</span> exception<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment" spellcheck="true">//Around -&gt; Any method within resource annotated with @Controller annotation </span>
	<span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">"controller() &amp;&amp; allMethod()"</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> Object <span class="token function">logAround</span><span class="token punctuation">(</span>ProceedingJoinPoint joinPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> Throwable <span class="token punctuation">{</span>
		
		<span class="token keyword">long</span> start <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			String className <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaringTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			Object result <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">long</span> elapsedTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
			log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Method "</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" ()"</span> <span class="token operator">+</span> <span class="token string">" execution time : "</span>
					<span class="token operator">+</span> elapsedTime <span class="token operator">+</span> <span class="token string">" ms"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
			<span class="token keyword">return</span> result<span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Illegal argument "</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" in "</span>
					<span class="token operator">+</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">throw</span> e<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">private</span> String <span class="token function">getValue</span><span class="token punctuation">(</span>Object result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		String returnValue <span class="token operator">=</span> null<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">!=</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"@"</span> <span class="token operator">+</span> Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				returnValue <span class="token operator">=</span> ReflectionToStringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				returnValue <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> returnValue<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><h2><strong>2.) Booking</strong><strong> controller</strong><strong>&nbsp;resource:</strong></h2><pre class=" language-java"><code class=" language-java">
<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>DateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Locale<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>UUID<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Model<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMethod<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestParam<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * Handles requests for the application home page.
 */</span>
<span class="token annotation punctuation">@Controller</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hotel"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookingController</span> <span class="token punctuation">{</span>
		
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>BookingController<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment" spellcheck="true">/**
	 * Simply selects the home view to render by returning its name.
	 */</span>
	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>
	<span class="token keyword">public</span> String <span class="token function">home</span><span class="token punctuation">(</span>Locale locale<span class="token punctuation">,</span> Model model<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Welcome home! The client locale is {}."</span><span class="token punctuation">,</span> locale<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		Date date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		DateFormat dateFormat <span class="token operator">=</span> DateFormat<span class="token punctuation">.</span><span class="token function">getDateTimeInstance</span><span class="token punctuation">(</span>DateFormat<span class="token punctuation">.</span>LONG<span class="token punctuation">,</span> DateFormat<span class="token punctuation">.</span>LONG<span class="token punctuation">,</span> locale<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		String formattedDate <span class="token operator">=</span> dateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"serverTime"</span><span class="token punctuation">,</span> formattedDate <span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">return</span> <span class="token string">"hotel"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/book"</span><span class="token punctuation">,</span> method<span class="token operator">=</span>RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">bookHotel</span><span class="token punctuation">(</span>
    		<span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"name"</span><span class="token punctuation">,</span>required<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span> String name<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"city"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> String city<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"purpose"</span><span class="token punctuation">,</span>required<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span> String purpose<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"idproof"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> String idproof<span class="token punctuation">,</span>
            Model model<span class="token punctuation">,</span>  HttpServletRequest request<span class="token punctuation">)</span><span class="token punctuation">{</span>
		
		<span class="token comment" spellcheck="true">//Save the required information in data base</span>
		<span class="token comment" spellcheck="true">//......</span>
		<span class="token comment" spellcheck="true">//......</span>
		<span class="token comment" spellcheck="true">//Send the response back</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> name <span class="token punctuation">)</span><span class="token punctuation">;</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"city"</span><span class="token punctuation">,</span> city <span class="token punctuation">)</span><span class="token punctuation">;</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"purpose"</span><span class="token punctuation">,</span> purpose <span class="token punctuation">)</span><span class="token punctuation">;</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"idproof"</span><span class="token punctuation">,</span> idproof <span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">return</span> <span class="token string">"customerDetails"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/book"</span><span class="token punctuation">,</span> method<span class="token operator">=</span>RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">bookHotel</span><span class="token punctuation">(</span>
    		<span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span>required<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span> String id<span class="token punctuation">,</span>
    		Model model<span class="token punctuation">,</span>  HttpServletRequest request<span class="token punctuation">)</span><span class="token punctuation">{</span>
		
		<span class="token comment" spellcheck="true">//get the required information in data base for customer Id</span>
		<span class="token comment" spellcheck="true">//......</span>
		<span class="token comment" spellcheck="true">//......</span>
		
		<span class="token comment" spellcheck="true">//suppose we get these value from database</span>
		String randomName <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		String randomCity <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		String randomPurpose <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		String randomIdProof <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			
		<span class="token comment" spellcheck="true">//Send the response back</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"Name "</span><span class="token operator">+</span>randomName <span class="token punctuation">)</span><span class="token punctuation">;</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"city"</span><span class="token punctuation">,</span> <span class="token string">"City "</span><span class="token operator">+</span>randomCity <span class="token punctuation">)</span><span class="token punctuation">;</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"purpose"</span><span class="token punctuation">,</span> <span class="token string">"Purpose "</span><span class="token operator">+</span>randomPurpose<span class="token punctuation">)</span><span class="token punctuation">;</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"idproof"</span><span class="token punctuation">,</span> <span class="token string">"IdProof "</span><span class="token operator">+</span>randomIdProof <span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">return</span> <span class="token string">"customerDetails"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><h2><strong>3.) Web.xml:</strong></h2><pre class=" language-markup"><code class=" language-markup">
<span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.5<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">"</span></span>
	<span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>
	<span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

	<span class="token comment" spellcheck="true">&lt;!-- The definition of the Root Spring Container shared by all Servlets and Filters --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>/WEB-INF/spring/root-context.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span> 
		<span class="token comment" spellcheck="true">&lt;!-- &lt;param-value&gt;/WEB-INF/spring/appServlet/servlet-context.xml&lt;/param-value&gt;  --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>
	
	<span class="token comment" spellcheck="true">&lt;!-- Creates the Spring Container shared by all Servlets and Filters --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">&gt;</span></span>

	<span class="token comment" spellcheck="true">&lt;!-- Processes application requests --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>appServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>/WEB-INF/spring/appServlet/servlet-context.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
		
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>appServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><p>Our server application is deployed in local machine so “localhost” is our machine name and at port 9095. Change your ip and port to access the resources of BookingController. Besides, do take care of context path where you have deployed your application.<br>
The URL to access the resource should look like<br>
http://&lt;IP Address or machine name&gt;:&lt;port number&gt;/log/hotel/</p><h2><strong>Spring Logging Aspect execution results:</strong></h2><h2><strong>Default Home Page</strong></h2><p>http://localhost:9095/log/hotel/<br>
Logs are :</p><pre class=" language-bash"><code class=" language-bash">
INFO : Welcome home! The client locale is en_US.
DEBUG: Method org.learn.log.BookingController.home () execution time : 1 ms
DEBUG: Method Return value : hotel
</code></pre><h2><strong>Post request </strong><strong>RESTFul Service&nbsp;</strong></h2><p>http://localhost:9095/log/hotel/book<br>
Logs are :</p><div class="code-block code-block-3" style="margin: 8px 0; clear: both;"> <script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f(1).txt" type="text/javascript"></script>
<ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-5895285707798114" data-ad-slot="3356980566"></ins> <script type="text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></div><pre class=" language-java"><code class=" language-java">
DEBUG<span class="token operator">:</span> Entering in Method <span class="token operator">:</span> bookHotel
DEBUG<span class="token operator">:</span> Class <span class="token class-name">Name</span> <span class="token operator">:</span> org<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>log<span class="token punctuation">.</span>BookingController
DEBUG<span class="token operator">:</span> Arguments <span class="token operator">:</span> <span class="token punctuation">[</span>Scott<span class="token punctuation">,</span> Customer CityName<span class="token punctuation">,</span> Personal<span class="token punctuation">,</span> Security Number<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>RequestFacade<span class="token annotation punctuation">@7886596e</span><span class="token punctuation">]</span>
DEBUG<span class="token operator">:</span> Target <span class="token keyword">class</span> <span class="token operator">:</span> org<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>log<span class="token punctuation">.</span>BookingController
DEBUG<span class="token operator">:</span> Start Header Section of request
DEBUG<span class="token operator">:</span> Method Type <span class="token operator">:</span> POST
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> host Header Value <span class="token operator">:</span> localhost<span class="token operator">:</span><span class="token number">9095</span>
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> connection Header Value <span class="token operator">:</span> keep<span class="token operator">-</span>alive
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> content<span class="token operator">-</span>length Header Value <span class="token operator">:</span> <span class="token number">0</span>
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> user<span class="token operator">-</span>agent Header Value <span class="token operator">:</span> Mozilla<span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span>Windows NT <span class="token number">6.3</span><span class="token punctuation">;</span> WOW64<span class="token punctuation">)</span> AppleWebKit<span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like Gecko<span class="token punctuation">)</span> Chrome<span class="token operator">/</span><span class="token number">45.0</span><span class="token punctuation">.</span><span class="token number">2454.101</span> Safari<span class="token operator">/</span><span class="token number">537.36</span>
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> cache<span class="token operator">-</span>control Header Value <span class="token operator">:</span> no<span class="token operator">-</span>cache
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> origin Header Value <span class="token operator">:</span> chrome<span class="token operator">-</span>extension<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mkhojklkhkdaghjjfdnphfphiaiohkef
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> accept Header Value <span class="token operator">:</span> <span class="token operator">*</span><span class="token operator">/</span><span class="token operator">*</span>
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> accept<span class="token operator">-</span>encoding Header Value <span class="token operator">:</span> gzip<span class="token punctuation">,</span> deflate
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> accept<span class="token operator">-</span>language Header Value <span class="token operator">:</span> en<span class="token operator">-</span>US<span class="token punctuation">,</span>en<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.8</span>
DEBUG<span class="token operator">:</span> Request Path info <span class="token operator">:</span><span class="token operator">/</span>hotel<span class="token operator">/</span>book
DEBUG<span class="token operator">:</span> End Header Section of request
DEBUG<span class="token operator">:</span> Method org<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>log<span class="token punctuation">.</span>BookingController<span class="token punctuation">.</span>bookHotel <span class="token punctuation">(</span><span class="token punctuation">)</span> execution time <span class="token operator">:</span> <span class="token number">148</span> ms
DEBUG<span class="token operator">:</span> Method Return value <span class="token operator">:</span> customerDetails
</code></pre><h2><strong>GET Request – RESTFul WebService</strong></h2><p>http://localhost:9095/log/hotel/book?id=1<br>
Logs are :</p><pre class=" language-java"><code class=" language-java">
DEBUG<span class="token operator">:</span> Entering in Method <span class="token operator">:</span> bookHotel
DEBUG<span class="token operator">:</span> Class <span class="token class-name">Name</span> <span class="token operator">:</span> org<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>log<span class="token punctuation">.</span>BookingController
DEBUG<span class="token operator">:</span> Arguments <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>RequestFacade<span class="token annotation punctuation">@777d0dd6</span><span class="token punctuation">]</span>
DEBUG<span class="token operator">:</span> Target <span class="token keyword">class</span> <span class="token operator">:</span> org<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>log<span class="token punctuation">.</span>BookingController
DEBUG<span class="token operator">:</span> Start Header Section of request
DEBUG<span class="token operator">:</span> Method Type <span class="token operator">:</span> GET
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> accept Header Value <span class="token operator">:</span> image<span class="token operator">/</span>jpeg<span class="token punctuation">,</span> application<span class="token operator">/</span>x<span class="token operator">-</span>ms<span class="token operator">-</span>application<span class="token punctuation">,</span> image<span class="token operator">/</span>gif<span class="token punctuation">,</span> application<span class="token operator">/</span>xaml<span class="token operator">+</span>xml<span class="token punctuation">,</span> image<span class="token operator">/</span>pjpeg<span class="token punctuation">,</span> application<span class="token operator">/</span>x<span class="token operator">-</span>ms<span class="token operator">-</span>xbap<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token operator">/</span><span class="token operator">*</span>
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> accept<span class="token operator">-</span>language Header Value <span class="token operator">:</span> en<span class="token operator">-</span>US
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> ua<span class="token operator">-</span>cpu Header Value <span class="token operator">:</span> AMD64
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> accept<span class="token operator">-</span>encoding Header Value <span class="token operator">:</span> gzip<span class="token punctuation">,</span> deflate
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> user<span class="token operator">-</span>agent Header Value <span class="token operator">:</span> Mozilla<span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span>Windows NT <span class="token number">6.2</span><span class="token punctuation">;</span> Win64<span class="token punctuation">;</span> x64<span class="token punctuation">;</span> Trident<span class="token operator">/</span><span class="token number">7.0</span><span class="token punctuation">;</span> MASPJS<span class="token punctuation">;</span> rv<span class="token operator">:</span><span class="token number">11.0</span><span class="token punctuation">)</span> like Gecko
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> host Header Value <span class="token operator">:</span> localhost<span class="token operator">:</span><span class="token number">9095</span>
DEBUG<span class="token operator">:</span> Header Name<span class="token operator">:</span> connection Header Value <span class="token operator">:</span> Keep<span class="token operator">-</span>Alive
DEBUG<span class="token operator">:</span> Request Path info <span class="token operator">:</span><span class="token operator">/</span>hotel<span class="token operator">/</span>book
DEBUG<span class="token operator">:</span> End Header Section of request
DEBUG<span class="token operator">:</span> Method org<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>log<span class="token punctuation">.</span>BookingController<span class="token punctuation">.</span>bookHotel <span class="token punctuation">(</span><span class="token punctuation">)</span> execution time <span class="token operator">:</span> <span class="token number">8</span> ms
DEBUG<span class="token operator">:</span> Method Return value <span class="token operator">:</span> customerDetails
</code></pre><p>We can download the complete code. Refer ReadMe.md file under project directory for more details. In our pom we have kept commonly used jars required to develop any web application.</p><h2 style="text-align: center;"><a href="https://github.com/sjkhullar/RequestLogging/archive/master.zip">Code: Logging aspect RESTFul web service spring aop</a></h2><div class="widget_text awac-wrapper" id="custom_html-2"><div class="widget_text awac widget custom_html-2"><div class="textwidget custom-html-widget"><script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f(1).txt" type="text/javascript"></script> <ins class="adsbygoogle" style="display:block" data-ad-format="autorelaxed" data-ad-client="ca-pub-5895285707798114" data-ad-slot="5262883789"></ins> <script type="text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></div></div></div><div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-twitter"><a rel="nofollow noopener noreferrer" data-shared="sharing-twitter-1371" class="share-twitter sd-button share-icon no-text" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/?share=twitter&amp;nb=1" target="_blank" title="Click to share on Twitter"><span></span><span class="sharing-screen-reader-text">Click to share on Twitter (Opens in new window)</span></a></li><li class="share-facebook"><a rel="nofollow noopener noreferrer" data-shared="sharing-facebook-1371" class="share-facebook sd-button share-icon no-text" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/?share=facebook&amp;nb=1" target="_blank" title="Click to share on Facebook"><span></span><span class="sharing-screen-reader-text">Click to share on Facebook (Opens in new window)</span></a></li><li class="share-linkedin"><a rel="nofollow noopener noreferrer" data-shared="sharing-linkedin-1371" class="share-linkedin sd-button share-icon no-text" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/?share=linkedin&amp;nb=1" target="_blank" title="Click to share on LinkedIn"><span></span><span class="sharing-screen-reader-text">Click to share on LinkedIn (Opens in new window)</span></a></li><li class="share-pinterest"><a rel="nofollow noopener noreferrer" data-shared="sharing-pinterest-1371" class="share-pinterest sd-button share-icon no-text" href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/?share=pinterest&amp;nb=1" target="_blank" title="Click to share on Pinterest"><span></span><span class="sharing-screen-reader-text">Click to share on Pinterest (Opens in new window)</span></a></li><li class="share-end"></li></ul></div></div></div><div class="sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded" id="like-post-wrapper-104237397-1371-5e10a926b209a" data-src="https://widgets.wp.com/likes/#blog_id=104237397&amp;post_id=1371&amp;origin=makeinjava.com&amp;obj_id=104237397-1371-5e10a926b209a" data-name="like-post-frame-104237397-1371-5e10a926b209a"><h3 class="sd-title">Like this:</h3><div class="likes-widget-placeholder post-likes-widget-placeholder" style="height: 55px;"><span class="button"><span>Like</span></span> <span class="loading">Loading...</span></div><span class="sd-text-color"></span><a class="sd-link-color"></a></div><div class="code-block code-block-4" style="margin: 8px 0; clear: both;"> <script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f(1).txt" type="text/javascript"></script>
<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5895285707798114" data-ad-slot="6251445189" data-ad-format="link" data-full-width-responsive="true"></ins> <script type="text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></div></div><footer class="entry-meta">
<span>Category: <a href="https://makeinjava.com/category/spring/" rel="category tag">Spring</a></span>
<span>Tags: <a href="https://makeinjava.com/tag/aop/" rel="tag">AOP</a>, <a href="https://makeinjava.com/tag/j2ee-and-enterprise-frameworks/" rel="tag">J2EE and Enterprise Frameworks</a>, <a href="https://makeinjava.com/tag/logging/" rel="tag">Logging</a>, <a href="https://makeinjava.com/tag/rest/" rel="tag">REST</a>, <a href="https://makeinjava.com/tag/spring/" rel="tag">Spring</a></span></footer></article><div id="disqus_thread"><iframe id="dsq-app1077" name="dsq-app1077" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./Logging aspect in RESTful service using spring aop (log requests)_files/saved_resource(2).html" style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 2386px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe></div></div></div><div id="secondary" class="widget-area q2w3-fixed-widget-container" role="complementary" style="height: 975px;"><aside id="custom_html-9" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget">
<div id="___gcse_0"><div class="gsc-control-searchbox-only gsc-control-searchbox-only-en" dir="ltr"><form class="gsc-search-box gsc-search-box-tools" accept-charset="utf-8"><table cellspacing="0" cellpadding="0" class="gsc-search-box"><tbody><tr><td class="gsc-input"><div class="gsc-input-box" id="gsc-iw-id1"><table cellspacing="0" cellpadding="0" id="gs_id50" class="gstl_50 gsc-input" style="width: 100%; padding: 0px;"><tbody><tr><td id="gs_tti50" class="gsib_a"><input autocomplete="off" type="text" size="10" class="gsc-input" name="search" title="search" id="gsc-i-id1" placeholder="Custom Search" style="width: 100%; padding: 0px; border: none; margin: -0.0625em 0px 0px; height: 1.25em; background: url(&quot;https://www.google.com/cse/static/images/1x/googlelogo_lightgrey_46x16dp.png&quot;) left center no-repeat rgb(255, 255, 255); text-indent: 48px; outline: none;" dir="ltr" spellcheck="false"></td><td class="gsib_b"><div class="gsst_b" id="gs_st50" dir="ltr"><a class="gsst_a" href="javascript:void(0)" style="display: none;" title="Clear search box" role="button"><span class="gscb_a" id="gs_cb50" aria-hidden="true">×</span></a></div></td></tr></tbody></table></div></td><td class="gsc-search-button"><button class="gsc-search-button gsc-search-button-v2"><svg width="13" height="13" viewBox="0 0 13 13"><title>search</title><path d="m4.8495 7.8226c0.82666 0 1.5262-0.29146 2.0985-0.87438 0.57232-0.58292 0.86378-1.2877 0.87438-2.1144 0.010599-0.82666-0.28086-1.5262-0.87438-2.0985-0.59352-0.57232-1.293-0.86378-2.0985-0.87438-0.8055-0.010599-1.5103 0.28086-2.1144 0.87438-0.60414 0.59352-0.8956 1.293-0.87438 2.0985 0.021197 0.8055 0.31266 1.5103 0.87438 2.1144 0.56172 0.60414 1.2665 0.8956 2.1144 0.87438zm4.4695 0.2115 3.681 3.6819-1.259 1.284-3.6817-3.7 0.0019784-0.69479-0.090043-0.098846c-0.87973 0.76087-1.92 1.1413-3.1207 1.1413-1.3553 0-2.5025-0.46363-3.4417-1.3909s-1.4088-2.0686-1.4088-3.4239c0-1.3553 0.4696-2.4966 1.4088-3.4239 0.9392-0.92727 2.0864-1.3969 3.4417-1.4088 1.3553-0.011889 2.4906 0.45771 3.406 1.4088 0.9154 0.95107 1.379 2.0924 1.3909 3.4239 0 1.2126-0.38043 2.2588-1.1413 3.1385l0.098834 0.090049z"></path></svg></button></td><td class="gsc-clear-button"><div class="gsc-clear-button" title="clear results">&nbsp;</div></td></tr></tbody></table></form></div></div></div></aside><aside id="custom_html-5" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f(1).txt" type="text/javascript"></script>
<ins class="adsbygoogle" style="display:inline-block;width:250px;height:250px" data-ad-client="ca-pub-5895285707798114" data-ad-slot="2039741586"></ins> <script type="text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></div></aside><aside id="blog_subscription-2" class="widget widget_blog_subscription jetpack_subscription_widget"><p class="widget-title"></p><form action="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/#" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-2"><p id="subscribe-email">
<label id="jetpack-subscribe-label" class="screen-reader-text" for="subscribe-field-blog_subscription-2">
Email Address </label>
<input type="email" name="email" required="required" class="required" value="" id="subscribe-field-blog_subscription-2" placeholder="Email Address"></p><p id="subscribe-submit">
<input type="hidden" name="action" value="subscribe">
<input type="hidden" name="source" value="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/">
<input type="hidden" name="sub-type" value="widget">
<input type="hidden" name="redirect_fragment" value="blog_subscription-2">
<button type="submit" name="jetpack_subscriptions_widget">
Subscribe </button></p></form></aside><aside id="custom_html-6" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f(1).txt" type="text/javascript"></script>
<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5895285707798114" data-ad-slot="1533540785" data-ad-format="auto" data-full-width-responsive="true"></ins> <script type="text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></div></aside><aside id="top-posts-2" class="widget widget_top-posts"><p class="widget-title">Top Posts &amp; Pages</p><ul><li>
<a href="https://makeinjava.com/convert-list-objects-to-from-json-java-jackson-objectmapper-example/" class="bump-view" data-bump-view="tp">
Convert list of objects to/from JSON in java (jackson objectmapper/ example)	</a></li><li>
<a href="https://makeinjava.com/create-implement-stack-using-array-java-example/" class="bump-view" data-bump-view="tp">
Create or implement stack using array in java (with example)	</a></li><li>
<a href="https://makeinjava.com/logging-aspect-restful-web-service-spring-aop-request-response/" class="bump-view" data-bump-view="tp">
Logging aspect in RESTful web service - spring aop (log requests/responses)	</a></li><li>
<a href="https://makeinjava.com/convert-local-file-path-url-uri-java-example/" class="bump-view" data-bump-view="tp">
Convert local file path to URL &amp; URI in java (example)	</a></li><li>
<a href="https://makeinjava.com/remove-null-empty-string-array-lambda-stream-java8-example/" class="bump-view" data-bump-view="tp">
Filter/Remove null &amp; empty string from array - lambda stream java8 (example)	</a></li><li>
<a href="https://makeinjava.com/find-height-binary-tree-java-dfs-recursive-algorithm-example/" class="bump-view" data-bump-view="tp">
Find height of binary tree in java (DFS /Recursive algorithm/example)	</a></li><li>
<a href="https://makeinjava.com/create-new-file-folder-directory-java-example/" class="bump-view" data-bump-view="tp">
Create new file &amp; folder (directory) in java (example)	</a></li><li>
<a href="https://makeinjava.com/java-scanner-example-read-write-contents-file-example/" class="bump-view" data-bump-view="tp">
Java Scanner example - read &amp; write contents to/ from file (example)	</a></li><li>
<a href="https://makeinjava.com/custom-thread-pool-java-example-without-executor-framework/" class="bump-view" data-bump-view="tp">
Create custom thread pool in java without executor framework (example)	</a></li><li>
<a href="https://makeinjava.com/date-serialization-deserialization-pojo-json-gson-example/" class="bump-view" data-bump-view="tp">
Date serialization &amp; deserialization - POJO to JSON (GSON &amp; example)	</a></li></ul></aside><aside id="custom_html-8" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f(1).txt" type="text/javascript"></script>
<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5895285707798114" data-ad-slot="5319378047" data-ad-format="auto" data-full-width-responsive="true"></ins> <script type="text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></div></aside><aside id="custom_html-7" class="widget_text widget widget_custom_html" style=""><div class="textwidget custom-html-widget"><script async="" src="./Logging aspect in RESTful service using spring aop (log requests)_files/f(1).txt" type="text/javascript"></script>
<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5895285707798114" data-ad-slot="7004527631" data-ad-format="auto" data-full-width-responsive="true"></ins> <script type="text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></div></aside></div></div><footer id="colophon" role="contentinfo"><div class="site-info"><div class="footercopy">Copyright © 2019 &nbsp; &nbsp; &nbsp; &nbsp; All rights reserved!!</div><div class="footercredit"><a href="http://www.makeinjava.com/privacy-policy/">Privacy Policy </a>&nbsp; <a href="http://www.makeinjava.com/contact-us/">Contact Us </a></div><div class="clear"></div></div></footer><div class="clear"></div></div><div style="display:none"></div> <script type="text/javascript">( 'fetch' in window ) || document.write( '<script async=async src="https://makeinjava.com/wp-includes/js/dist/vendor/wp-polyfill-fetch.min.js?ver=3.0.0"></scr' + 'ipt>' );( document.contains ) || document.write( '<script async=async src="https://makeinjava.com/wp-includes/js/dist/vendor/wp-polyfill-node-contains.min.js?ver=3.26.0-0"></scr' + 'ipt>' );( window.FormData && window.FormData.prototype.keys ) || document.write( '<script async=async src="https://makeinjava.com/wp-includes/js/dist/vendor/wp-polyfill-formdata.min.js?ver=3.0.12"></scr' + 'ipt>' );( Element.prototype.matches && Element.prototype.closest ) || document.write( '<script async=async src="https://makeinjava.com/wp-includes/js/dist/vendor/wp-polyfill-element-closest.min.js?ver=2.0.2"></scr' + 'ipt>' );</script> <script async="async" src="./Logging aspect in RESTful service using spring aop (log requests)_files/devicepx-jetpack.js" type="text/javascript"></script> <script async="async" src="./Logging aspect in RESTful service using spring aop (log requests)_files/gprofiles.js" type="text/javascript"></script> <iframe src="./Logging aspect in RESTful service using spring aop (log requests)_files/master.html" scrolling="no" id="likes-master" name="likes-master" style="display:none;"></iframe><div id="likes-other-gravatars"><div class="likes-text"><span>%d</span> bloggers like this:</div><ul class="wpl-avatars sd-like-gravatars"></ul></div> <script async="async" src="./Logging aspect in RESTful service using spring aop (log requests)_files/e-202001.js" defer="defer" type="text/javascript"></script> <script type="text/javascript">_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:7.8.1',blog:'104237397',post:'1371',tz:'0',srv:'makeinjava.com'} ]);
	_stq.push([ 'clickTrackerInit', '104237397', '1371' ]);</script> <script defer="defer" src="./Logging aspect in RESTful service using spring aop (log requests)_files/autoptimize_4cce1ebb87bc298eba8078b00e15fbd4.js" type="text/javascript"></script><script data-cfasync="false">!function(t){"use strict";t.loadCSS||(t.loadCSS=function(){});var e=loadCSS.relpreload={};if(e.support=function(){var e;try{e=t.document.createElement("link").relList.supports("preload")}catch(t){e=!1}return function(){return e}}(),e.bindMediaToggle=function(t){function e(){t.media=a}var a=t.media||"all";t.addEventListener?t.addEventListener("load",e):t.attachEvent&&t.attachEvent("onload",e),setTimeout(function(){t.rel="stylesheet",t.media="only x"}),setTimeout(e,3e3)},e.poly=function(){if(!e.support())for(var a=t.document.getElementsByTagName("link"),n=0;n<a.length;n++){var o=a[n];"preload"!==o.rel||"style"!==o.getAttribute("as")||o.getAttribute("data-loadcss")||(o.setAttribute("data-loadcss",!0),e.bindMediaToggle(o))}},!e.support()){e.poly();var a=t.setInterval(e.poly,500);t.addEventListener?t.addEventListener("load",function(){e.poly(),t.clearInterval(a)}):t.attachEvent&&t.attachEvent("onload",function(){e.poly(),t.clearInterval(a)})}"undefined"!=typeof exports?exports.loadCSS=loadCSS:t.loadCSS=loadCSS}("undefined"!=typeof global?global:this);</script>
<img src="./Logging aspect in RESTful service using spring aop (log requests)_files/g.gif" alt=":)" width="6" height="5" id="wpstats" scale="0"><table cellspacing="0" cellpadding="0" class="gstl_50 gssb_c" style="width: 214px; display: none; top: 250px; position: absolute; left: 818px;"><tbody><tr><td class="gssb_f"></td><td class="gssb_e" style="width: 100%;"></td></tr></tbody></table><iframe style="display: none;" src="./Logging aspect in RESTful service using spring aop (log requests)_files/saved_resource(3).html"></iframe></body></html>